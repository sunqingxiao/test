Terminals unused in grammar

   BRANCHTARGETS_DIRECTIVE
   BYTE_DIRECTIVE
   CALLPROTOTYPE_DIRECTIVE
   CALLTARGETS_DIRECTIVE
   MAXNNREG_DIRECTIVE
   REQNTID_DIRECTIVE
   SECTION_DIRECTIVE
   STRUCT_DIRECTIVE
   UNION_DIRECTIVE
   PERIOD


State 302 conflicts: 1 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input directive_statement
    3      | input function_defn
    4      | input function_decl

    5 $@1: %empty

    6 function_defn: function_decl $@1 statement_block

    7 $@2: %empty

    8 $@3: %empty

    9 function_defn: function_decl $@2 block_spec_list $@3 statement_block

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND
   11           | MINNCTAPERSM_DIRECTIVE INT_OPERAND
   12           | MAXNCTAPERSM_DIRECTIVE INT_OPERAND

   13 block_spec_list: block_spec
   14                | block_spec_list block_spec

   15 $@4: %empty

   16 $@5: %empty

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param

   18 $@6: %empty

   19 function_decl: function_decl_header $@6 function_ident_param
   20              | function_decl_header

   21 $@7: %empty

   22 $@8: %empty

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | IDENTIFIER

   25 function_decl_header: ENTRY_DIRECTIVE
   26                     | VISIBLE_DIRECTIVE ENTRY_DIRECTIVE
   27                     | WEAK_DIRECTIVE ENTRY_DIRECTIVE
   28                     | FUNC_DIRECTIVE
   29                     | VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   30                     | EXTERN_DIRECTIVE FUNC_DIRECTIVE
   31                     | WEAK_DIRECTIVE FUNC_DIRECTIVE

   32 param_list: %empty
   33           | param_entry

   34 $@9: %empty

   35 param_list: param_list COMMA $@9 param_entry

   36 $@10: %empty

   37 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec

   38 $@11: %empty

   39 param_entry: REG_DIRECTIVE $@11 variable_spec identifier_spec

   40 ptr_spec: %empty
   41         | PTR_DIRECTIVE ptr_space_spec ptr_align_spec
   42         | PTR_DIRECTIVE ptr_align_spec

   43 ptr_space_spec: GLOBAL_DIRECTIVE
   44               | LOCAL_DIRECTIVE
   45               | SHARED_DIRECTIVE

   46 ptr_align_spec: ALIGN_DIRECTIVE INT_OPERAND

   47 statement_block: LEFT_BRACE statement_list RIGHT_BRACE

   48 statement_list: directive_statement
   49               | instruction_statement
   50               | statement_list directive_statement
   51               | statement_list instruction_statement

   52 $@12: %empty

   53 statement_list: statement_list $@12 statement_block

   54 $@13: %empty

   55 statement_list: $@13 statement_block

   56 directive_statement: variable_declaration SEMI_COLON
   57                    | VERSION_DIRECTIVE DOUBLE_OPERAND
   58                    | VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   59                    | ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   60                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   61                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   62                    | TARGET_DIRECTIVE IDENTIFIER
   63                    | FILE_DIRECTIVE INT_OPERAND STRING
   64                    | LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   65                    | PRAGMA_DIRECTIVE STRING SEMI_COLON
   66                    | function_decl SEMI_COLON

   67 variable_declaration: variable_spec identifier_list
   68                     | variable_spec identifier_spec EQUALS initializer_list
   69                     | variable_spec identifier_spec EQUALS literal_operand
   70                     | CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND

   71 variable_spec: var_spec_list

   72 identifier_list: identifier_spec
   73                | identifier_list COMMA identifier_spec

   74 identifier_spec: IDENTIFIER
   75                | IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   76                | IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   77                | IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

   78 var_spec_list: var_spec
   79              | var_spec_list var_spec

   80 var_spec: space_spec
   81         | type_spec
   82         | align_spec
   83         | EXTERN_DIRECTIVE
   84         | WEAK_DIRECTIVE

   85 align_spec: ALIGN_DIRECTIVE INT_OPERAND

   86 space_spec: REG_DIRECTIVE
   87           | SREG_DIRECTIVE
   88           | addressable_spec

   89 addressable_spec: CONST_DIRECTIVE
   90                 | GLOBAL_DIRECTIVE
   91                 | LOCAL_DIRECTIVE
   92                 | PARAM_DIRECTIVE
   93                 | SHARED_DIRECTIVE
   94                 | SURF_DIRECTIVE
   95                 | TEX_DIRECTIVE

   96 type_spec: scalar_type
   97          | vector_spec scalar_type

   98 vector_spec: V2_TYPE
   99            | V3_TYPE
  100            | V4_TYPE

  101 scalar_type: S8_TYPE
  102            | S16_TYPE
  103            | S32_TYPE
  104            | S64_TYPE
  105            | U8_TYPE
  106            | U16_TYPE
  107            | U32_TYPE
  108            | U64_TYPE
  109            | F16_TYPE
  110            | F32_TYPE
  111            | F64_TYPE
  112            | FF64_TYPE
  113            | B8_TYPE
  114            | B16_TYPE
  115            | B32_TYPE
  116            | B64_TYPE
  117            | BB64_TYPE
  118            | BB128_TYPE
  119            | PRED_TYPE
  120            | TEXREF_TYPE
  121            | SAMPLERREF_TYPE
  122            | SURFREF_TYPE

  123 initializer_list: LEFT_BRACE literal_list RIGHT_BRACE
  124                 | LEFT_BRACE initializer_list RIGHT_BRACE

  125 literal_list: literal_operand
  126             | literal_list COMMA literal_operand

  127 instruction_statement: instruction SEMI_COLON
  128                      | IDENTIFIER COLON
  129                      | pred_spec instruction SEMI_COLON

  130 $@14: %empty

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  132            | opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  133            | opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  134            | opcode_spec operand_list
  135            | opcode_spec

  136 $@15: %empty

  137 opcode_spec: OPCODE $@15 option_list
  138            | OPCODE

  139 pred_spec: PRED IDENTIFIER
  140          | PRED EXCLAMATION IDENTIFIER
  141          | PRED IDENTIFIER LT_OPTION
  142          | PRED IDENTIFIER EQ_OPTION
  143          | PRED IDENTIFIER LE_OPTION
  144          | PRED IDENTIFIER NE_OPTION
  145          | PRED IDENTIFIER GE_OPTION
  146          | PRED IDENTIFIER EQU_OPTION
  147          | PRED IDENTIFIER GTU_OPTION
  148          | PRED IDENTIFIER NEU_OPTION
  149          | PRED IDENTIFIER CF_OPTION
  150          | PRED IDENTIFIER SF_OPTION
  151          | PRED IDENTIFIER NSF_OPTION

  152 option_list: option
  153            | option option_list

  154 option: type_spec
  155       | compare_spec
  156       | addressable_spec
  157       | rounding_mode
  158       | SYNC_OPTION
  159       | ARRIVE_OPTION
  160       | RED_OPTION
  161       | UNI_OPTION
  162       | WIDE_OPTION
  163       | ANY_OPTION
  164       | ALL_OPTION
  165       | BALLOT_OPTION
  166       | GLOBAL_OPTION
  167       | CTA_OPTION
  168       | SYS_OPTION
  169       | GEOM_MODIFIER_1D
  170       | GEOM_MODIFIER_2D
  171       | GEOM_MODIFIER_3D
  172       | SAT_OPTION
  173       | FTZ_OPTION
  174       | NEG_OPTION
  175       | APPROX_OPTION
  176       | FULL_OPTION
  177       | EXIT_OPTION
  178       | ABS_OPTION
  179       | atomic_operation_spec
  180       | TO_OPTION
  181       | HALF_OPTION
  182       | CA_OPTION
  183       | CG_OPTION
  184       | CS_OPTION
  185       | LU_OPTION
  186       | CV_OPTION
  187       | WB_OPTION
  188       | WT_OPTION

  189 atomic_operation_spec: ATOMIC_AND
  190                      | ATOMIC_POPC
  191                      | ATOMIC_OR
  192                      | ATOMIC_XOR
  193                      | ATOMIC_CAS
  194                      | ATOMIC_EXCH
  195                      | ATOMIC_ADD
  196                      | ATOMIC_INC
  197                      | ATOMIC_DEC
  198                      | ATOMIC_MIN
  199                      | ATOMIC_MAX

  200 rounding_mode: floating_point_rounding_mode
  201              | integer_rounding_mode

  202 floating_point_rounding_mode: RN_OPTION
  203                             | RZ_OPTION
  204                             | RM_OPTION
  205                             | RP_OPTION

  206 integer_rounding_mode: RNI_OPTION
  207                      | RZI_OPTION
  208                      | RMI_OPTION
  209                      | RPI_OPTION

  210 compare_spec: EQ_OPTION
  211             | NE_OPTION
  212             | LT_OPTION
  213             | LE_OPTION
  214             | GT_OPTION
  215             | GE_OPTION
  216             | LO_OPTION
  217             | LS_OPTION
  218             | HI_OPTION
  219             | HS_OPTION
  220             | EQU_OPTION
  221             | NEU_OPTION
  222             | LTU_OPTION
  223             | LEU_OPTION
  224             | GTU_OPTION
  225             | GEU_OPTION
  226             | NUM_OPTION
  227             | NAN_OPTION

  228 operand_list: operand
  229             | operand COMMA operand_list

  230 operand: IDENTIFIER
  231        | EXCLAMATION IDENTIFIER
  232        | MINUS IDENTIFIER
  233        | memory_operand
  234        | literal_operand
  235        | builtin_operand
  236        | vector_operand
  237        | MINUS vector_operand
  238        | tex_operand
  239        | IDENTIFIER PLUS INT_OPERAND
  240        | IDENTIFIER LO_OPTION
  241        | MINUS IDENTIFIER LO_OPTION
  242        | IDENTIFIER HI_OPTION
  243        | MINUS IDENTIFIER HI_OPTION
  244        | IDENTIFIER PIPE IDENTIFIER
  245        | IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | IDENTIFIER BACKSLASH IDENTIFIER
  248        | IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION

  250 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | LEFT_BRACE IDENTIFIER RIGHT_BRACE

  254 $@16: %empty

  255 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET

  256 builtin_operand: SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | SPECIAL_REGISTER

  258 memory_operand: LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | MINUS memory_operand

  263 twin_operand: IDENTIFIER PLUS IDENTIFIER
  264             | IDENTIFIER PLUS IDENTIFIER LO_OPTION
  265             | IDENTIFIER PLUS IDENTIFIER HI_OPTION
  266             | IDENTIFIER PLUS EQUALS IDENTIFIER
  267             | IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION
  268             | IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION
  269             | IDENTIFIER PLUS EQUALS INT_OPERAND

  270 literal_operand: INT_OPERAND
  271                | FLOAT_OPERAND
  272                | DOUBLE_OPERAND

  273 address_expression: IDENTIFIER
  274                   | IDENTIFIER LO_OPTION
  275                   | IDENTIFIER HI_OPTION
  276                   | IDENTIFIER PLUS INT_OPERAND
  277                   | INT_OPERAND


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 63 65
OPCODE (259) 137 138
ALIGN_DIRECTIVE (260) 46 85
BRANCHTARGETS_DIRECTIVE (261)
BYTE_DIRECTIVE (262)
CALLPROTOTYPE_DIRECTIVE (263)
CALLTARGETS_DIRECTIVE (264)
CONST_DIRECTIVE (265) 89
CONSTPTR_DIRECTIVE (266) 70
PTR_DIRECTIVE (267) 41 42
ENTRY_DIRECTIVE (268) 25 26 27
EXTERN_DIRECTIVE (269) 30 83
FILE_DIRECTIVE (270) 63
FUNC_DIRECTIVE (271) 28 29 30 31
GLOBAL_DIRECTIVE (272) 43 90
LOCAL_DIRECTIVE (273) 44 91
LOC_DIRECTIVE (274) 64
MAXNCTAPERSM_DIRECTIVE (275) 12
MAXNNREG_DIRECTIVE (276)
MAXNTID_DIRECTIVE (277) 10
MINNCTAPERSM_DIRECTIVE (278) 11
PARAM_DIRECTIVE (279) 37 92
PRAGMA_DIRECTIVE (280) 65
REG_DIRECTIVE (281) 39 86
REQNTID_DIRECTIVE (282)
SECTION_DIRECTIVE (283)
SHARED_DIRECTIVE (284) 45 93
SREG_DIRECTIVE (285) 87
STRUCT_DIRECTIVE (286)
SURF_DIRECTIVE (287) 94
TARGET_DIRECTIVE (288) 60 61 62
TEX_DIRECTIVE (289) 95
UNION_DIRECTIVE (290)
VERSION_DIRECTIVE (291) 57 58
ADDRESS_SIZE_DIRECTIVE (292) 59
VISIBLE_DIRECTIVE (293) 26 29
WEAK_DIRECTIVE (294) 27 31 84
IDENTIFIER (295) 23 24 60 61 62 70 74 75 76 77 128 139 140 141 142
    143 144 145 146 147 148 149 150 151 230 231 232 239 240 241 242
    243 244 245 246 247 248 249 250 251 252 253 255 259 260 261 263
    264 265 266 267 268 269 273 274 275 276
INT_OPERAND (296) 10 11 12 46 59 63 64 70 75 77 85 239 269 270 276
    277
FLOAT_OPERAND (297) 271
DOUBLE_OPERAND (298) 57 58 272
S8_TYPE (299) 101
S16_TYPE (300) 102
S32_TYPE (301) 103
S64_TYPE (302) 104
U8_TYPE (303) 105
U16_TYPE (304) 106
U32_TYPE (305) 107
U64_TYPE (306) 108
F16_TYPE (307) 109
F32_TYPE (308) 110
F64_TYPE (309) 111
FF64_TYPE (310) 112
B8_TYPE (311) 113
B16_TYPE (312) 114
B32_TYPE (313) 115
B64_TYPE (314) 116
BB64_TYPE (315) 117
BB128_TYPE (316) 118
PRED_TYPE (317) 119
TEXREF_TYPE (318) 120
SAMPLERREF_TYPE (319) 121
SURFREF_TYPE (320) 122
V2_TYPE (321) 98
V3_TYPE (322) 99
V4_TYPE (323) 100
COMMA (324) 10 35 60 61 70 73 126 131 132 133 229 250 251 252 255
PRED (325) 139 140 141 142 143 144 145 146 147 148 149 150 151
HALF_OPTION (326) 181
EQ_OPTION (327) 142 210
NE_OPTION (328) 144 211
LT_OPTION (329) 141 212
LE_OPTION (330) 143 213
GT_OPTION (331) 214
GE_OPTION (332) 145 215
LO_OPTION (333) 216 240 241 245 248 264 267 274
LS_OPTION (334) 217
HI_OPTION (335) 218 242 243 246 249 265 268 275
HS_OPTION (336) 219
EQU_OPTION (337) 146 220
NEU_OPTION (338) 148 221
LTU_OPTION (339) 222
LEU_OPTION (340) 223
GTU_OPTION (341) 147 224
GEU_OPTION (342) 225
NUM_OPTION (343) 226
NAN_OPTION (344) 227
CF_OPTION (345) 149
SF_OPTION (346) 150
NSF_OPTION (347) 151
LEFT_SQUARE_BRACKET (348) 76 77 255 258 259 260 261
RIGHT_SQUARE_BRACKET (349) 76 77 255 258 259 260 261
WIDE_OPTION (350) 162
SPECIAL_REGISTER (351) 256 257
MINUS (352) 232 237 241 243 262
PLUS (353) 58 239 263 264 265 266 267 268 269 276
COLON (354) 128
SEMI_COLON (355) 56 65 66 127 129
EXCLAMATION (356) 140 231
PIPE (357) 244 245 246
RIGHT_BRACE (358) 47 123 124 250 251 252 253
LEFT_BRACE (359) 47 123 124 250 251 252 253
EQUALS (360) 68 69 266 267 268 269
PERIOD (361)
BACKSLASH (362) 247 248 249
DIMENSION_MODIFIER (363) 256
RN_OPTION (364) 202
RZ_OPTION (365) 203
RM_OPTION (366) 204
RP_OPTION (367) 205
RNI_OPTION (368) 206
RZI_OPTION (369) 207
RMI_OPTION (370) 208
RPI_OPTION (371) 209
UNI_OPTION (372) 161
GEOM_MODIFIER_1D (373) 169
GEOM_MODIFIER_2D (374) 170
GEOM_MODIFIER_3D (375) 171
SAT_OPTION (376) 172
FTZ_OPTION (377) 173
NEG_OPTION (378) 174
SYNC_OPTION (379) 158
RED_OPTION (380) 160
ARRIVE_OPTION (381) 159
ATOMIC_POPC (382) 190
ATOMIC_AND (383) 189
ATOMIC_OR (384) 191
ATOMIC_XOR (385) 192
ATOMIC_CAS (386) 193
ATOMIC_EXCH (387) 194
ATOMIC_ADD (388) 195
ATOMIC_INC (389) 196
ATOMIC_DEC (390) 197
ATOMIC_MIN (391) 198
ATOMIC_MAX (392) 199
LEFT_ANGLE_BRACKET (393) 75
RIGHT_ANGLE_BRACKET (394) 75
LEFT_PAREN (395) 17 23 131 132 133
RIGHT_PAREN (396) 17 23 131 132 133
APPROX_OPTION (397) 175
FULL_OPTION (398) 176
ANY_OPTION (399) 163
ALL_OPTION (400) 164
BALLOT_OPTION (401) 165
GLOBAL_OPTION (402) 166
CTA_OPTION (403) 167
SYS_OPTION (404) 168
EXIT_OPTION (405) 177
ABS_OPTION (406) 178
TO_OPTION (407) 180
CA_OPTION (408) 182
CG_OPTION (409) 183
CS_OPTION (410) 184
LU_OPTION (411) 185
CV_OPTION (412) 186
WB_OPTION (413) 187
WT_OPTION (414) 188


Nonterminals, with rules where they appear

$accept (160)
    on left: 0
input (161)
    on left: 1 2 3 4, on right: 0 2 3 4
function_defn (162)
    on left: 6 9, on right: 3
$@1 (163)
    on left: 5, on right: 6
$@2 (164)
    on left: 7, on right: 9
$@3 (165)
    on left: 8, on right: 9
block_spec (166)
    on left: 10 11 12, on right: 13 14
block_spec_list (167)
    on left: 13 14, on right: 9 14
function_decl (168)
    on left: 17 19 20, on right: 4 6 9 66
$@4 (169)
    on left: 15, on right: 17
$@5 (170)
    on left: 16, on right: 17
$@6 (171)
    on left: 18, on right: 19
function_ident_param (172)
    on left: 23 24, on right: 17 19
$@7 (173)
    on left: 21, on right: 23
$@8 (174)
    on left: 22, on right: 23
function_decl_header (175)
    on left: 25 26 27 28 29 30 31, on right: 17 19 20
param_list (176)
    on left: 32 33 35, on right: 23 35
$@9 (177)
    on left: 34, on right: 35
param_entry (178)
    on left: 37 39, on right: 17 33 35
$@10 (179)
    on left: 36, on right: 37
$@11 (180)
    on left: 38, on right: 39
ptr_spec (181)
    on left: 40 41 42, on right: 37
ptr_space_spec (182)
    on left: 43 44 45, on right: 41
ptr_align_spec (183)
    on left: 46, on right: 41 42
statement_block (184)
    on left: 47, on right: 6 9 53 55
statement_list (185)
    on left: 48 49 50 51 53 55, on right: 47 50 51 53
$@12 (186)
    on left: 52, on right: 53
$@13 (187)
    on left: 54, on right: 55
directive_statement (188)
    on left: 56 57 58 59 60 61 62 63 64 65 66, on right: 2 48 50
variable_declaration (189)
    on left: 67 68 69 70, on right: 56
variable_spec (190)
    on left: 71, on right: 37 39 67 68 69
identifier_list (191)
    on left: 72 73, on right: 67 73
identifier_spec (192)
    on left: 74 75 76 77, on right: 37 39 68 69 72 73
var_spec_list (193)
    on left: 78 79, on right: 71 79
var_spec (194)
    on left: 80 81 82 83 84, on right: 78 79
align_spec (195)
    on left: 85, on right: 82
space_spec (196)
    on left: 86 87 88, on right: 80
addressable_spec (197)
    on left: 89 90 91 92 93 94 95, on right: 88 156
type_spec (198)
    on left: 96 97, on right: 81 154
vector_spec (199)
    on left: 98 99 100, on right: 97
scalar_type (200)
    on left: 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117 118 119 120 121 122, on right: 96 97
initializer_list (201)
    on left: 123 124, on right: 68 124
literal_list (202)
    on left: 125 126, on right: 123 126
instruction_statement (203)
    on left: 127 128 129, on right: 49 51
instruction (204)
    on left: 131 132 133 134 135, on right: 127 129
$@14 (205)
    on left: 130, on right: 131
opcode_spec (206)
    on left: 137 138, on right: 131 132 133 134 135
$@15 (207)
    on left: 136, on right: 137
pred_spec (208)
    on left: 139 140 141 142 143 144 145 146 147 148 149 150 151, on right:
    129
option_list (209)
    on left: 152 153, on right: 137 153
option (210)
    on left: 154 155 156 157 158 159 160 161 162 163 164 165 166 167
    168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    184 185 186 187 188, on right: 152 153
atomic_operation_spec (211)
    on left: 189 190 191 192 193 194 195 196 197 198 199, on right:
    179
rounding_mode (212)
    on left: 200 201, on right: 157
floating_point_rounding_mode (213)
    on left: 202 203 204 205, on right: 200
integer_rounding_mode (214)
    on left: 206 207 208 209, on right: 201
compare_spec (215)
    on left: 210 211 212 213 214 215 216 217 218 219 220 221 222 223
    224 225 226 227, on right: 155
operand_list (216)
    on left: 228 229, on right: 131 132 134 229
operand (217)
    on left: 230 231 232 233 234 235 236 237 238 239 240 241 242 243
    244 245 246 247 248 249, on right: 131 132 133 228 229
vector_operand (218)
    on left: 250 251 252 253, on right: 236 237 255
tex_operand (219)
    on left: 255, on right: 238
$@16 (220)
    on left: 254, on right: 255
builtin_operand (221)
    on left: 256 257, on right: 235
memory_operand (222)
    on left: 258 259 260 261 262, on right: 233 262
twin_operand (223)
    on left: 263 264 265 266 267 268 269, on right: 261
literal_operand (224)
    on left: 270 271 272, on right: 69 125 126 234 260
address_expression (225)
    on left: 273 274 275 276 277, on right: 258 259


State 0

    0 $accept: . input $end
    1 input: . %empty
    2      | . input directive_statement
    3      | . input function_defn
    4      | . input function_decl

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . directive_statement
    3      | input . function_defn
    4      | input . function_decl
    6 function_defn: . function_decl $@1 statement_block
    9              | . function_decl $@2 block_spec_list $@3 statement_block
   17 function_decl: . function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   19              | . function_decl_header $@6 function_ident_param
   20              | . function_decl_header
   25 function_decl_header: . ENTRY_DIRECTIVE
   26                     | . VISIBLE_DIRECTIVE ENTRY_DIRECTIVE
   27                     | . WEAK_DIRECTIVE ENTRY_DIRECTIVE
   28                     | . FUNC_DIRECTIVE
   29                     | . VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   30                     | . EXTERN_DIRECTIVE FUNC_DIRECTIVE
   31                     | . WEAK_DIRECTIVE FUNC_DIRECTIVE
   56 directive_statement: . variable_declaration SEMI_COLON
   57                    | . VERSION_DIRECTIVE DOUBLE_OPERAND
   58                    | . VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   59                    | . ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   60                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   61                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   62                    | . TARGET_DIRECTIVE IDENTIFIER
   63                    | . FILE_DIRECTIVE INT_OPERAND STRING
   64                    | . LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   65                    | . PRAGMA_DIRECTIVE STRING SEMI_COLON
   66                    | . function_decl SEMI_COLON
   67 variable_declaration: . variable_spec identifier_list
   68                     | . variable_spec identifier_spec EQUALS initializer_list
   69                     | . variable_spec identifier_spec EQUALS literal_operand
   70                     | . CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND
   71 variable_spec: . var_spec_list
   78 var_spec_list: . var_spec
   79              | . var_spec_list var_spec
   80 var_spec: . space_spec
   81         | . type_spec
   82         | . align_spec
   83         | . EXTERN_DIRECTIVE
   84         | . WEAK_DIRECTIVE
   85 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   86 space_spec: . REG_DIRECTIVE
   87           | . SREG_DIRECTIVE
   88           | . addressable_spec
   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE

    $end                    shift, and go to state 2
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SURF_DIRECTIVE          shift, and go to state 18
    TARGET_DIRECTIVE        shift, and go to state 19
    TEX_DIRECTIVE           shift, and go to state 20
    VERSION_DIRECTIVE       shift, and go to state 21
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 22
    VISIBLE_DIRECTIVE       shift, and go to state 23
    WEAK_DIRECTIVE          shift, and go to state 24
    S8_TYPE                 shift, and go to state 25
    S16_TYPE                shift, and go to state 26
    S32_TYPE                shift, and go to state 27
    S64_TYPE                shift, and go to state 28
    U8_TYPE                 shift, and go to state 29
    U16_TYPE                shift, and go to state 30
    U32_TYPE                shift, and go to state 31
    U64_TYPE                shift, and go to state 32
    F16_TYPE                shift, and go to state 33
    F32_TYPE                shift, and go to state 34
    F64_TYPE                shift, and go to state 35
    FF64_TYPE               shift, and go to state 36
    B8_TYPE                 shift, and go to state 37
    B16_TYPE                shift, and go to state 38
    B32_TYPE                shift, and go to state 39
    B64_TYPE                shift, and go to state 40
    BB64_TYPE               shift, and go to state 41
    BB128_TYPE              shift, and go to state 42
    PRED_TYPE               shift, and go to state 43
    TEXREF_TYPE             shift, and go to state 44
    SAMPLERREF_TYPE         shift, and go to state 45
    SURFREF_TYPE            shift, and go to state 46
    V2_TYPE                 shift, and go to state 47
    V3_TYPE                 shift, and go to state 48
    V4_TYPE                 shift, and go to state 49

    function_defn         go to state 50
    function_decl         go to state 51
    function_decl_header  go to state 52
    directive_statement   go to state 53
    variable_declaration  go to state 54
    variable_spec         go to state 55
    var_spec_list         go to state 56
    var_spec              go to state 57
    align_spec            go to state 58
    space_spec            go to state 59
    addressable_spec      go to state 60
    type_spec             go to state 61
    vector_spec           go to state 62
    scalar_type           go to state 63


State 2

    0 $accept: input $end .

    $default  accept


State 3

   85 align_spec: ALIGN_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 64


State 4

   89 addressable_spec: CONST_DIRECTIVE .

    $default  reduce using rule 89 (addressable_spec)


State 5

   70 variable_declaration: CONSTPTR_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND

    IDENTIFIER  shift, and go to state 65


State 6

   25 function_decl_header: ENTRY_DIRECTIVE .

    $default  reduce using rule 25 (function_decl_header)


State 7

   30 function_decl_header: EXTERN_DIRECTIVE . FUNC_DIRECTIVE
   83 var_spec: EXTERN_DIRECTIVE .  [ALIGN_DIRECTIVE, CONST_DIRECTIVE, EXTERN_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, PARAM_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TEX_DIRECTIVE, WEAK_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE]

    FUNC_DIRECTIVE  shift, and go to state 66

    $default  reduce using rule 83 (var_spec)


State 8

   63 directive_statement: FILE_DIRECTIVE . INT_OPERAND STRING

    INT_OPERAND  shift, and go to state 67


State 9

   28 function_decl_header: FUNC_DIRECTIVE .

    $default  reduce using rule 28 (function_decl_header)


State 10

   90 addressable_spec: GLOBAL_DIRECTIVE .

    $default  reduce using rule 90 (addressable_spec)


State 11

   91 addressable_spec: LOCAL_DIRECTIVE .

    $default  reduce using rule 91 (addressable_spec)


State 12

   64 directive_statement: LOC_DIRECTIVE . INT_OPERAND INT_OPERAND INT_OPERAND

    INT_OPERAND  shift, and go to state 68


State 13

   92 addressable_spec: PARAM_DIRECTIVE .

    $default  reduce using rule 92 (addressable_spec)


State 14

   65 directive_statement: PRAGMA_DIRECTIVE . STRING SEMI_COLON

    STRING  shift, and go to state 69


State 15

   86 space_spec: REG_DIRECTIVE .

    $default  reduce using rule 86 (space_spec)


State 16

   93 addressable_spec: SHARED_DIRECTIVE .

    $default  reduce using rule 93 (addressable_spec)


State 17

   87 space_spec: SREG_DIRECTIVE .

    $default  reduce using rule 87 (space_spec)


State 18

   94 addressable_spec: SURF_DIRECTIVE .

    $default  reduce using rule 94 (addressable_spec)


State 19

   60 directive_statement: TARGET_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER
   61                    | TARGET_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   62                    | TARGET_DIRECTIVE . IDENTIFIER

    IDENTIFIER  shift, and go to state 70


State 20

   95 addressable_spec: TEX_DIRECTIVE .

    $default  reduce using rule 95 (addressable_spec)


State 21

   57 directive_statement: VERSION_DIRECTIVE . DOUBLE_OPERAND
   58                    | VERSION_DIRECTIVE . DOUBLE_OPERAND PLUS

    DOUBLE_OPERAND  shift, and go to state 71


State 22

   59 directive_statement: ADDRESS_SIZE_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 72


State 23

   26 function_decl_header: VISIBLE_DIRECTIVE . ENTRY_DIRECTIVE
   29                     | VISIBLE_DIRECTIVE . FUNC_DIRECTIVE

    ENTRY_DIRECTIVE  shift, and go to state 73
    FUNC_DIRECTIVE   shift, and go to state 74


State 24

   27 function_decl_header: WEAK_DIRECTIVE . ENTRY_DIRECTIVE
   31                     | WEAK_DIRECTIVE . FUNC_DIRECTIVE
   84 var_spec: WEAK_DIRECTIVE .  [ALIGN_DIRECTIVE, CONST_DIRECTIVE, EXTERN_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, PARAM_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TEX_DIRECTIVE, WEAK_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE]

    ENTRY_DIRECTIVE  shift, and go to state 75
    FUNC_DIRECTIVE   shift, and go to state 76

    $default  reduce using rule 84 (var_spec)


State 25

  101 scalar_type: S8_TYPE .

    $default  reduce using rule 101 (scalar_type)


State 26

  102 scalar_type: S16_TYPE .

    $default  reduce using rule 102 (scalar_type)


State 27

  103 scalar_type: S32_TYPE .

    $default  reduce using rule 103 (scalar_type)


State 28

  104 scalar_type: S64_TYPE .

    $default  reduce using rule 104 (scalar_type)


State 29

  105 scalar_type: U8_TYPE .

    $default  reduce using rule 105 (scalar_type)


State 30

  106 scalar_type: U16_TYPE .

    $default  reduce using rule 106 (scalar_type)


State 31

  107 scalar_type: U32_TYPE .

    $default  reduce using rule 107 (scalar_type)


State 32

  108 scalar_type: U64_TYPE .

    $default  reduce using rule 108 (scalar_type)


State 33

  109 scalar_type: F16_TYPE .

    $default  reduce using rule 109 (scalar_type)


State 34

  110 scalar_type: F32_TYPE .

    $default  reduce using rule 110 (scalar_type)


State 35

  111 scalar_type: F64_TYPE .

    $default  reduce using rule 111 (scalar_type)


State 36

  112 scalar_type: FF64_TYPE .

    $default  reduce using rule 112 (scalar_type)


State 37

  113 scalar_type: B8_TYPE .

    $default  reduce using rule 113 (scalar_type)


State 38

  114 scalar_type: B16_TYPE .

    $default  reduce using rule 114 (scalar_type)


State 39

  115 scalar_type: B32_TYPE .

    $default  reduce using rule 115 (scalar_type)


State 40

  116 scalar_type: B64_TYPE .

    $default  reduce using rule 116 (scalar_type)


State 41

  117 scalar_type: BB64_TYPE .

    $default  reduce using rule 117 (scalar_type)


State 42

  118 scalar_type: BB128_TYPE .

    $default  reduce using rule 118 (scalar_type)


State 43

  119 scalar_type: PRED_TYPE .

    $default  reduce using rule 119 (scalar_type)


State 44

  120 scalar_type: TEXREF_TYPE .

    $default  reduce using rule 120 (scalar_type)


State 45

  121 scalar_type: SAMPLERREF_TYPE .

    $default  reduce using rule 121 (scalar_type)


State 46

  122 scalar_type: SURFREF_TYPE .

    $default  reduce using rule 122 (scalar_type)


State 47

   98 vector_spec: V2_TYPE .

    $default  reduce using rule 98 (vector_spec)


State 48

   99 vector_spec: V3_TYPE .

    $default  reduce using rule 99 (vector_spec)


State 49

  100 vector_spec: V4_TYPE .

    $default  reduce using rule 100 (vector_spec)


State 50

    3 input: input function_defn .

    $default  reduce using rule 3 (input)


State 51

    4 input: input function_decl .  [$end, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, WEAK_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE]
    5 $@1: . %empty  [LEFT_BRACE]
    6 function_defn: function_decl . $@1 statement_block
    7 $@2: . %empty  [MAXNCTAPERSM_DIRECTIVE, MAXNTID_DIRECTIVE, MINNCTAPERSM_DIRECTIVE]
    9 function_defn: function_decl . $@2 block_spec_list $@3 statement_block
   66 directive_statement: function_decl . SEMI_COLON

    SEMI_COLON  shift, and go to state 77

    MAXNCTAPERSM_DIRECTIVE  reduce using rule 7 ($@2)
    MAXNTID_DIRECTIVE       reduce using rule 7 ($@2)
    MINNCTAPERSM_DIRECTIVE  reduce using rule 7 ($@2)
    LEFT_BRACE              reduce using rule 5 ($@1)
    $default                reduce using rule 4 (input)

    $@1  go to state 78
    $@2  go to state 79


State 52

   17 function_decl: function_decl_header . LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   18 $@6: . %empty  [IDENTIFIER]
   19 function_decl: function_decl_header . $@6 function_ident_param
   20              | function_decl_header .  [$end, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, MAXNCTAPERSM_DIRECTIVE, MAXNTID_DIRECTIVE, MINNCTAPERSM_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, WEAK_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, SEMI_COLON, LEFT_BRACE]

    LEFT_PAREN  shift, and go to state 80

    IDENTIFIER  reduce using rule 18 ($@6)
    $default    reduce using rule 20 (function_decl)

    $@6  go to state 81


State 53

    2 input: input directive_statement .

    $default  reduce using rule 2 (input)


State 54

   56 directive_statement: variable_declaration . SEMI_COLON

    SEMI_COLON  shift, and go to state 82


State 55

   67 variable_declaration: variable_spec . identifier_list
   68                     | variable_spec . identifier_spec EQUALS initializer_list
   69                     | variable_spec . identifier_spec EQUALS literal_operand
   72 identifier_list: . identifier_spec
   73                | . identifier_list COMMA identifier_spec
   74 identifier_spec: . IDENTIFIER
   75                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   76                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   77                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 83

    identifier_list  go to state 84
    identifier_spec  go to state 85


State 56

   71 variable_spec: var_spec_list .  [PTR_DIRECTIVE, IDENTIFIER]
   79 var_spec_list: var_spec_list . var_spec
   80 var_spec: . space_spec
   81         | . type_spec
   82         | . align_spec
   83         | . EXTERN_DIRECTIVE
   84         | . WEAK_DIRECTIVE
   85 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   86 space_spec: . REG_DIRECTIVE
   87           | . SREG_DIRECTIVE
   88           | . addressable_spec
   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE

    ALIGN_DIRECTIVE   shift, and go to state 3
    CONST_DIRECTIVE   shift, and go to state 4
    EXTERN_DIRECTIVE  shift, and go to state 86
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    REG_DIRECTIVE     shift, and go to state 15
    SHARED_DIRECTIVE  shift, and go to state 16
    SREG_DIRECTIVE    shift, and go to state 17
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    WEAK_DIRECTIVE    shift, and go to state 87
    S8_TYPE           shift, and go to state 25
    S16_TYPE          shift, and go to state 26
    S32_TYPE          shift, and go to state 27
    S64_TYPE          shift, and go to state 28
    U8_TYPE           shift, and go to state 29
    U16_TYPE          shift, and go to state 30
    U32_TYPE          shift, and go to state 31
    U64_TYPE          shift, and go to state 32
    F16_TYPE          shift, and go to state 33
    F32_TYPE          shift, and go to state 34
    F64_TYPE          shift, and go to state 35
    FF64_TYPE         shift, and go to state 36
    B8_TYPE           shift, and go to state 37
    B16_TYPE          shift, and go to state 38
    B32_TYPE          shift, and go to state 39
    B64_TYPE          shift, and go to state 40
    BB64_TYPE         shift, and go to state 41
    BB128_TYPE        shift, and go to state 42
    PRED_TYPE         shift, and go to state 43
    TEXREF_TYPE       shift, and go to state 44
    SAMPLERREF_TYPE   shift, and go to state 45
    SURFREF_TYPE      shift, and go to state 46
    V2_TYPE           shift, and go to state 47
    V3_TYPE           shift, and go to state 48
    V4_TYPE           shift, and go to state 49

    $default  reduce using rule 71 (variable_spec)

    var_spec          go to state 88
    align_spec        go to state 58
    space_spec        go to state 59
    addressable_spec  go to state 60
    type_spec         go to state 61
    vector_spec       go to state 62
    scalar_type       go to state 63


State 57

   78 var_spec_list: var_spec .

    $default  reduce using rule 78 (var_spec_list)


State 58

   82 var_spec: align_spec .

    $default  reduce using rule 82 (var_spec)


State 59

   80 var_spec: space_spec .

    $default  reduce using rule 80 (var_spec)


State 60

   88 space_spec: addressable_spec .

    $default  reduce using rule 88 (space_spec)


State 61

   81 var_spec: type_spec .

    $default  reduce using rule 81 (var_spec)


State 62

   97 type_spec: vector_spec . scalar_type
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE

    S8_TYPE          shift, and go to state 25
    S16_TYPE         shift, and go to state 26
    S32_TYPE         shift, and go to state 27
    S64_TYPE         shift, and go to state 28
    U8_TYPE          shift, and go to state 29
    U16_TYPE         shift, and go to state 30
    U32_TYPE         shift, and go to state 31
    U64_TYPE         shift, and go to state 32
    F16_TYPE         shift, and go to state 33
    F32_TYPE         shift, and go to state 34
    F64_TYPE         shift, and go to state 35
    FF64_TYPE        shift, and go to state 36
    B8_TYPE          shift, and go to state 37
    B16_TYPE         shift, and go to state 38
    B32_TYPE         shift, and go to state 39
    B64_TYPE         shift, and go to state 40
    BB64_TYPE        shift, and go to state 41
    BB128_TYPE       shift, and go to state 42
    PRED_TYPE        shift, and go to state 43
    TEXREF_TYPE      shift, and go to state 44
    SAMPLERREF_TYPE  shift, and go to state 45
    SURFREF_TYPE     shift, and go to state 46

    scalar_type  go to state 89


State 63

   96 type_spec: scalar_type .

    $default  reduce using rule 96 (type_spec)


State 64

   85 align_spec: ALIGN_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 85 (align_spec)


State 65

   70 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER COMMA INT_OPERAND

    COMMA  shift, and go to state 90


State 66

   30 function_decl_header: EXTERN_DIRECTIVE FUNC_DIRECTIVE .

    $default  reduce using rule 30 (function_decl_header)


State 67

   63 directive_statement: FILE_DIRECTIVE INT_OPERAND . STRING

    STRING  shift, and go to state 91


State 68

   64 directive_statement: LOC_DIRECTIVE INT_OPERAND . INT_OPERAND INT_OPERAND

    INT_OPERAND  shift, and go to state 92


State 69

   65 directive_statement: PRAGMA_DIRECTIVE STRING . SEMI_COLON

    SEMI_COLON  shift, and go to state 93


State 70

   60 directive_statement: TARGET_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER
   61                    | TARGET_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER
   62                    | TARGET_DIRECTIVE IDENTIFIER .  [$end, OPCODE, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, WEAK_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, PRED, RIGHT_BRACE, LEFT_BRACE]

    COMMA  shift, and go to state 94

    $default  reduce using rule 62 (directive_statement)


State 71

   57 directive_statement: VERSION_DIRECTIVE DOUBLE_OPERAND .  [$end, OPCODE, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, WEAK_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, PRED, RIGHT_BRACE, LEFT_BRACE]
   58                    | VERSION_DIRECTIVE DOUBLE_OPERAND . PLUS

    PLUS  shift, and go to state 95

    $default  reduce using rule 57 (directive_statement)


State 72

   59 directive_statement: ADDRESS_SIZE_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 59 (directive_statement)


State 73

   26 function_decl_header: VISIBLE_DIRECTIVE ENTRY_DIRECTIVE .

    $default  reduce using rule 26 (function_decl_header)


State 74

   29 function_decl_header: VISIBLE_DIRECTIVE FUNC_DIRECTIVE .

    $default  reduce using rule 29 (function_decl_header)


State 75

   27 function_decl_header: WEAK_DIRECTIVE ENTRY_DIRECTIVE .

    $default  reduce using rule 27 (function_decl_header)


State 76

   31 function_decl_header: WEAK_DIRECTIVE FUNC_DIRECTIVE .

    $default  reduce using rule 31 (function_decl_header)


State 77

   66 directive_statement: function_decl SEMI_COLON .

    $default  reduce using rule 66 (directive_statement)


State 78

    6 function_defn: function_decl $@1 . statement_block
   47 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 96

    statement_block  go to state 97


State 79

    9 function_defn: function_decl $@2 . block_spec_list $@3 statement_block
   10 block_spec: . MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND
   11           | . MINNCTAPERSM_DIRECTIVE INT_OPERAND
   12           | . MAXNCTAPERSM_DIRECTIVE INT_OPERAND
   13 block_spec_list: . block_spec
   14                | . block_spec_list block_spec

    MAXNCTAPERSM_DIRECTIVE  shift, and go to state 98
    MAXNTID_DIRECTIVE       shift, and go to state 99
    MINNCTAPERSM_DIRECTIVE  shift, and go to state 100

    block_spec       go to state 101
    block_spec_list  go to state 102


State 80

   15 $@4: . %empty
   17 function_decl: function_decl_header LEFT_PAREN . $@4 param_entry RIGHT_PAREN $@5 function_ident_param

    $default  reduce using rule 15 ($@4)

    $@4  go to state 103


State 81

   19 function_decl: function_decl_header $@6 . function_ident_param
   23 function_ident_param: . IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | . IDENTIFIER

    IDENTIFIER  shift, and go to state 104

    function_ident_param  go to state 105


State 82

   56 directive_statement: variable_declaration SEMI_COLON .

    $default  reduce using rule 56 (directive_statement)


State 83

   74 identifier_spec: IDENTIFIER .  [COMMA, SEMI_COLON, EQUALS, RIGHT_PAREN]
   75                | IDENTIFIER . LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   76                | IDENTIFIER . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   77                | IDENTIFIER . LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 106
    LEFT_ANGLE_BRACKET   shift, and go to state 107

    $default  reduce using rule 74 (identifier_spec)


State 84

   67 variable_declaration: variable_spec identifier_list .  [SEMI_COLON]
   73 identifier_list: identifier_list . COMMA identifier_spec

    COMMA  shift, and go to state 108

    $default  reduce using rule 67 (variable_declaration)


State 85

   68 variable_declaration: variable_spec identifier_spec . EQUALS initializer_list
   69                     | variable_spec identifier_spec . EQUALS literal_operand
   72 identifier_list: identifier_spec .  [COMMA, SEMI_COLON]

    EQUALS  shift, and go to state 109

    $default  reduce using rule 72 (identifier_list)


State 86

   83 var_spec: EXTERN_DIRECTIVE .

    $default  reduce using rule 83 (var_spec)


State 87

   84 var_spec: WEAK_DIRECTIVE .

    $default  reduce using rule 84 (var_spec)


State 88

   79 var_spec_list: var_spec_list var_spec .

    $default  reduce using rule 79 (var_spec_list)


State 89

   97 type_spec: vector_spec scalar_type .

    $default  reduce using rule 97 (type_spec)


State 90

   70 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER COMMA INT_OPERAND

    IDENTIFIER  shift, and go to state 110


State 91

   63 directive_statement: FILE_DIRECTIVE INT_OPERAND STRING .

    $default  reduce using rule 63 (directive_statement)


State 92

   64 directive_statement: LOC_DIRECTIVE INT_OPERAND INT_OPERAND . INT_OPERAND

    INT_OPERAND  shift, and go to state 111


State 93

   65 directive_statement: PRAGMA_DIRECTIVE STRING SEMI_COLON .

    $default  reduce using rule 65 (directive_statement)


State 94

   60 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER
   61                    | TARGET_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 112


State 95

   58 directive_statement: VERSION_DIRECTIVE DOUBLE_OPERAND PLUS .

    $default  reduce using rule 58 (directive_statement)


State 96

   17 function_decl: . function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   19              | . function_decl_header $@6 function_ident_param
   20              | . function_decl_header
   25 function_decl_header: . ENTRY_DIRECTIVE
   26                     | . VISIBLE_DIRECTIVE ENTRY_DIRECTIVE
   27                     | . WEAK_DIRECTIVE ENTRY_DIRECTIVE
   28                     | . FUNC_DIRECTIVE
   29                     | . VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   30                     | . EXTERN_DIRECTIVE FUNC_DIRECTIVE
   31                     | . WEAK_DIRECTIVE FUNC_DIRECTIVE
   47 statement_block: LEFT_BRACE . statement_list RIGHT_BRACE
   48 statement_list: . directive_statement
   49               | . instruction_statement
   50               | . statement_list directive_statement
   51               | . statement_list instruction_statement
   53               | . statement_list $@12 statement_block
   54 $@13: . %empty  [LEFT_BRACE]
   55 statement_list: . $@13 statement_block
   56 directive_statement: . variable_declaration SEMI_COLON
   57                    | . VERSION_DIRECTIVE DOUBLE_OPERAND
   58                    | . VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   59                    | . ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   60                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   61                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   62                    | . TARGET_DIRECTIVE IDENTIFIER
   63                    | . FILE_DIRECTIVE INT_OPERAND STRING
   64                    | . LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   65                    | . PRAGMA_DIRECTIVE STRING SEMI_COLON
   66                    | . function_decl SEMI_COLON
   67 variable_declaration: . variable_spec identifier_list
   68                     | . variable_spec identifier_spec EQUALS initializer_list
   69                     | . variable_spec identifier_spec EQUALS literal_operand
   70                     | . CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND
   71 variable_spec: . var_spec_list
   78 var_spec_list: . var_spec
   79              | . var_spec_list var_spec
   80 var_spec: . space_spec
   81         | . type_spec
   82         | . align_spec
   83         | . EXTERN_DIRECTIVE
   84         | . WEAK_DIRECTIVE
   85 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   86 space_spec: . REG_DIRECTIVE
   87           | . SREG_DIRECTIVE
   88           | . addressable_spec
   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE
  127 instruction_statement: . instruction SEMI_COLON
  128                      | . IDENTIFIER COLON
  129                      | . pred_spec instruction SEMI_COLON
  131 instruction: . opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  132            | . opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  133            | . opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  134            | . opcode_spec operand_list
  135            | . opcode_spec
  137 opcode_spec: . OPCODE $@15 option_list
  138            | . OPCODE
  139 pred_spec: . PRED IDENTIFIER
  140          | . PRED EXCLAMATION IDENTIFIER
  141          | . PRED IDENTIFIER LT_OPTION
  142          | . PRED IDENTIFIER EQ_OPTION
  143          | . PRED IDENTIFIER LE_OPTION
  144          | . PRED IDENTIFIER NE_OPTION
  145          | . PRED IDENTIFIER GE_OPTION
  146          | . PRED IDENTIFIER EQU_OPTION
  147          | . PRED IDENTIFIER GTU_OPTION
  148          | . PRED IDENTIFIER NEU_OPTION
  149          | . PRED IDENTIFIER CF_OPTION
  150          | . PRED IDENTIFIER SF_OPTION
  151          | . PRED IDENTIFIER NSF_OPTION

    OPCODE                  shift, and go to state 113
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SURF_DIRECTIVE          shift, and go to state 18
    TARGET_DIRECTIVE        shift, and go to state 19
    TEX_DIRECTIVE           shift, and go to state 20
    VERSION_DIRECTIVE       shift, and go to state 21
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 22
    VISIBLE_DIRECTIVE       shift, and go to state 23
    WEAK_DIRECTIVE          shift, and go to state 24
    IDENTIFIER              shift, and go to state 114
    S8_TYPE                 shift, and go to state 25
    S16_TYPE                shift, and go to state 26
    S32_TYPE                shift, and go to state 27
    S64_TYPE                shift, and go to state 28
    U8_TYPE                 shift, and go to state 29
    U16_TYPE                shift, and go to state 30
    U32_TYPE                shift, and go to state 31
    U64_TYPE                shift, and go to state 32
    F16_TYPE                shift, and go to state 33
    F32_TYPE                shift, and go to state 34
    F64_TYPE                shift, and go to state 35
    FF64_TYPE               shift, and go to state 36
    B8_TYPE                 shift, and go to state 37
    B16_TYPE                shift, and go to state 38
    B32_TYPE                shift, and go to state 39
    B64_TYPE                shift, and go to state 40
    BB64_TYPE               shift, and go to state 41
    BB128_TYPE              shift, and go to state 42
    PRED_TYPE               shift, and go to state 43
    TEXREF_TYPE             shift, and go to state 44
    SAMPLERREF_TYPE         shift, and go to state 45
    SURFREF_TYPE            shift, and go to state 46
    V2_TYPE                 shift, and go to state 47
    V3_TYPE                 shift, and go to state 48
    V4_TYPE                 shift, and go to state 49
    PRED                    shift, and go to state 115

    $default  reduce using rule 54 ($@13)

    function_decl          go to state 116
    function_decl_header   go to state 52
    statement_list         go to state 117
    $@13                   go to state 118
    directive_statement    go to state 119
    variable_declaration   go to state 54
    variable_spec          go to state 55
    var_spec_list          go to state 56
    var_spec               go to state 57
    align_spec             go to state 58
    space_spec             go to state 59
    addressable_spec       go to state 60
    type_spec              go to state 61
    vector_spec            go to state 62
    scalar_type            go to state 63
    instruction_statement  go to state 120
    instruction            go to state 121
    opcode_spec            go to state 122
    pred_spec              go to state 123


State 97

    6 function_defn: function_decl $@1 statement_block .

    $default  reduce using rule 6 (function_defn)


State 98

   12 block_spec: MAXNCTAPERSM_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 124


State 99

   10 block_spec: MAXNTID_DIRECTIVE . INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 125


State 100

   11 block_spec: MINNCTAPERSM_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 126


State 101

   13 block_spec_list: block_spec .

    $default  reduce using rule 13 (block_spec_list)


State 102

    8 $@3: . %empty  [LEFT_BRACE]
    9 function_defn: function_decl $@2 block_spec_list . $@3 statement_block
   10 block_spec: . MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND
   11           | . MINNCTAPERSM_DIRECTIVE INT_OPERAND
   12           | . MAXNCTAPERSM_DIRECTIVE INT_OPERAND
   14 block_spec_list: block_spec_list . block_spec

    MAXNCTAPERSM_DIRECTIVE  shift, and go to state 98
    MAXNTID_DIRECTIVE       shift, and go to state 99
    MINNCTAPERSM_DIRECTIVE  shift, and go to state 100

    $default  reduce using rule 8 ($@3)

    $@3         go to state 127
    block_spec  go to state 128


State 103

   17 function_decl: function_decl_header LEFT_PAREN $@4 . param_entry RIGHT_PAREN $@5 function_ident_param
   37 param_entry: . PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec
   39            | . REG_DIRECTIVE $@11 variable_spec identifier_spec

    PARAM_DIRECTIVE  shift, and go to state 129
    REG_DIRECTIVE    shift, and go to state 130

    param_entry  go to state 131


State 104

   21 $@7: . %empty  [LEFT_PAREN]
   23 function_ident_param: IDENTIFIER . $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | IDENTIFIER .  [$end, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, MAXNCTAPERSM_DIRECTIVE, MAXNTID_DIRECTIVE, MINNCTAPERSM_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, WEAK_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, SEMI_COLON, LEFT_BRACE]

    LEFT_PAREN  reduce using rule 21 ($@7)
    $default    reduce using rule 24 (function_ident_param)

    $@7  go to state 132


State 105

   19 function_decl: function_decl_header $@6 function_ident_param .

    $default  reduce using rule 19 (function_decl)


State 106

   76 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
   77                | IDENTIFIER LEFT_SQUARE_BRACKET . INT_OPERAND RIGHT_SQUARE_BRACKET

    INT_OPERAND           shift, and go to state 133
    RIGHT_SQUARE_BRACKET  shift, and go to state 134


State 107

   75 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET . INT_OPERAND RIGHT_ANGLE_BRACKET

    INT_OPERAND  shift, and go to state 135


State 108

   73 identifier_list: identifier_list COMMA . identifier_spec
   74 identifier_spec: . IDENTIFIER
   75                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   76                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   77                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 83

    identifier_spec  go to state 136


State 109

   68 variable_declaration: variable_spec identifier_spec EQUALS . initializer_list
   69                     | variable_spec identifier_spec EQUALS . literal_operand
  123 initializer_list: . LEFT_BRACE literal_list RIGHT_BRACE
  124                 | . LEFT_BRACE initializer_list RIGHT_BRACE
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    INT_OPERAND     shift, and go to state 137
    FLOAT_OPERAND   shift, and go to state 138
    DOUBLE_OPERAND  shift, and go to state 139
    LEFT_BRACE      shift, and go to state 140

    initializer_list  go to state 141
    literal_operand   go to state 142


State 110

   70 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER . COMMA INT_OPERAND

    COMMA  shift, and go to state 143


State 111

   64 directive_statement: LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND .

    $default  reduce using rule 64 (directive_statement)


State 112

   60 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER .  [$end, OPCODE, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, WEAK_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, PRED, RIGHT_BRACE, LEFT_BRACE]
   61                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER

    COMMA  shift, and go to state 144

    $default  reduce using rule 60 (directive_statement)


State 113

  136 $@15: . %empty  [CONST_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, PARAM_DIRECTIVE, SHARED_DIRECTIVE, SURF_DIRECTIVE, TEX_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, HALF_OPTION, EQ_OPTION, NE_OPTION, LT_OPTION, LE_OPTION, GT_OPTION, GE_OPTION, LO_OPTION, LS_OPTION, HI_OPTION, HS_OPTION, EQU_OPTION, NEU_OPTION, LTU_OPTION, LEU_OPTION, GTU_OPTION, GEU_OPTION, NUM_OPTION, NAN_OPTION, WIDE_OPTION, RN_OPTION, RZ_OPTION, RM_OPTION, RP_OPTION, RNI_OPTION, RZI_OPTION, RMI_OPTION, RPI_OPTION, UNI_OPTION, GEOM_MODIFIER_1D, GEOM_MODIFIER_2D, GEOM_MODIFIER_3D, SAT_OPTION, FTZ_OPTION, NEG_OPTION, SYNC_OPTION, RED_OPTION, ARRIVE_OPTION, ATOMIC_POPC, ATOMIC_AND, ATOMIC_OR, ATOMIC_XOR, ATOMIC_CAS, ATOMIC_EXCH, ATOMIC_ADD, ATOMIC_INC, ATOMIC_DEC, ATOMIC_MIN, ATOMIC_MAX, APPROX_OPTION, FULL_OPTION, ANY_OPTION, ALL_OPTION, BALLOT_OPTION, GLOBAL_OPTION, CTA_OPTION, SYS_OPTION, EXIT_OPTION, ABS_OPTION, TO_OPTION, CA_OPTION, CG_OPTION, CS_OPTION, LU_OPTION, CV_OPTION, WB_OPTION, WT_OPTION]
  137 opcode_spec: OPCODE . $@15 option_list
  138            | OPCODE .  [IDENTIFIER, INT_OPERAND, FLOAT_OPERAND, DOUBLE_OPERAND, LEFT_SQUARE_BRACKET, SPECIAL_REGISTER, MINUS, SEMI_COLON, EXCLAMATION, LEFT_BRACE, LEFT_PAREN]

    IDENTIFIER           reduce using rule 138 (opcode_spec)
    INT_OPERAND          reduce using rule 138 (opcode_spec)
    FLOAT_OPERAND        reduce using rule 138 (opcode_spec)
    DOUBLE_OPERAND       reduce using rule 138 (opcode_spec)
    LEFT_SQUARE_BRACKET  reduce using rule 138 (opcode_spec)
    SPECIAL_REGISTER     reduce using rule 138 (opcode_spec)
    MINUS                reduce using rule 138 (opcode_spec)
    SEMI_COLON           reduce using rule 138 (opcode_spec)
    EXCLAMATION          reduce using rule 138 (opcode_spec)
    LEFT_BRACE           reduce using rule 138 (opcode_spec)
    LEFT_PAREN           reduce using rule 138 (opcode_spec)
    $default             reduce using rule 136 ($@15)

    $@15  go to state 145


State 114

  128 instruction_statement: IDENTIFIER . COLON

    COLON  shift, and go to state 146


State 115

  139 pred_spec: PRED . IDENTIFIER
  140          | PRED . EXCLAMATION IDENTIFIER
  141          | PRED . IDENTIFIER LT_OPTION
  142          | PRED . IDENTIFIER EQ_OPTION
  143          | PRED . IDENTIFIER LE_OPTION
  144          | PRED . IDENTIFIER NE_OPTION
  145          | PRED . IDENTIFIER GE_OPTION
  146          | PRED . IDENTIFIER EQU_OPTION
  147          | PRED . IDENTIFIER GTU_OPTION
  148          | PRED . IDENTIFIER NEU_OPTION
  149          | PRED . IDENTIFIER CF_OPTION
  150          | PRED . IDENTIFIER SF_OPTION
  151          | PRED . IDENTIFIER NSF_OPTION

    IDENTIFIER   shift, and go to state 147
    EXCLAMATION  shift, and go to state 148


State 116

   66 directive_statement: function_decl . SEMI_COLON

    SEMI_COLON  shift, and go to state 77


State 117

   17 function_decl: . function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   19              | . function_decl_header $@6 function_ident_param
   20              | . function_decl_header
   25 function_decl_header: . ENTRY_DIRECTIVE
   26                     | . VISIBLE_DIRECTIVE ENTRY_DIRECTIVE
   27                     | . WEAK_DIRECTIVE ENTRY_DIRECTIVE
   28                     | . FUNC_DIRECTIVE
   29                     | . VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   30                     | . EXTERN_DIRECTIVE FUNC_DIRECTIVE
   31                     | . WEAK_DIRECTIVE FUNC_DIRECTIVE
   47 statement_block: LEFT_BRACE statement_list . RIGHT_BRACE
   50 statement_list: statement_list . directive_statement
   51               | statement_list . instruction_statement
   52 $@12: . %empty  [LEFT_BRACE]
   53 statement_list: statement_list . $@12 statement_block
   56 directive_statement: . variable_declaration SEMI_COLON
   57                    | . VERSION_DIRECTIVE DOUBLE_OPERAND
   58                    | . VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   59                    | . ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   60                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   61                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   62                    | . TARGET_DIRECTIVE IDENTIFIER
   63                    | . FILE_DIRECTIVE INT_OPERAND STRING
   64                    | . LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   65                    | . PRAGMA_DIRECTIVE STRING SEMI_COLON
   66                    | . function_decl SEMI_COLON
   67 variable_declaration: . variable_spec identifier_list
   68                     | . variable_spec identifier_spec EQUALS initializer_list
   69                     | . variable_spec identifier_spec EQUALS literal_operand
   70                     | . CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND
   71 variable_spec: . var_spec_list
   78 var_spec_list: . var_spec
   79              | . var_spec_list var_spec
   80 var_spec: . space_spec
   81         | . type_spec
   82         | . align_spec
   83         | . EXTERN_DIRECTIVE
   84         | . WEAK_DIRECTIVE
   85 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   86 space_spec: . REG_DIRECTIVE
   87           | . SREG_DIRECTIVE
   88           | . addressable_spec
   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE
  127 instruction_statement: . instruction SEMI_COLON
  128                      | . IDENTIFIER COLON
  129                      | . pred_spec instruction SEMI_COLON
  131 instruction: . opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  132            | . opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  133            | . opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  134            | . opcode_spec operand_list
  135            | . opcode_spec
  137 opcode_spec: . OPCODE $@15 option_list
  138            | . OPCODE
  139 pred_spec: . PRED IDENTIFIER
  140          | . PRED EXCLAMATION IDENTIFIER
  141          | . PRED IDENTIFIER LT_OPTION
  142          | . PRED IDENTIFIER EQ_OPTION
  143          | . PRED IDENTIFIER LE_OPTION
  144          | . PRED IDENTIFIER NE_OPTION
  145          | . PRED IDENTIFIER GE_OPTION
  146          | . PRED IDENTIFIER EQU_OPTION
  147          | . PRED IDENTIFIER GTU_OPTION
  148          | . PRED IDENTIFIER NEU_OPTION
  149          | . PRED IDENTIFIER CF_OPTION
  150          | . PRED IDENTIFIER SF_OPTION
  151          | . PRED IDENTIFIER NSF_OPTION

    OPCODE                  shift, and go to state 113
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SURF_DIRECTIVE          shift, and go to state 18
    TARGET_DIRECTIVE        shift, and go to state 19
    TEX_DIRECTIVE           shift, and go to state 20
    VERSION_DIRECTIVE       shift, and go to state 21
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 22
    VISIBLE_DIRECTIVE       shift, and go to state 23
    WEAK_DIRECTIVE          shift, and go to state 24
    IDENTIFIER              shift, and go to state 114
    S8_TYPE                 shift, and go to state 25
    S16_TYPE                shift, and go to state 26
    S32_TYPE                shift, and go to state 27
    S64_TYPE                shift, and go to state 28
    U8_TYPE                 shift, and go to state 29
    U16_TYPE                shift, and go to state 30
    U32_TYPE                shift, and go to state 31
    U64_TYPE                shift, and go to state 32
    F16_TYPE                shift, and go to state 33
    F32_TYPE                shift, and go to state 34
    F64_TYPE                shift, and go to state 35
    FF64_TYPE               shift, and go to state 36
    B8_TYPE                 shift, and go to state 37
    B16_TYPE                shift, and go to state 38
    B32_TYPE                shift, and go to state 39
    B64_TYPE                shift, and go to state 40
    BB64_TYPE               shift, and go to state 41
    BB128_TYPE              shift, and go to state 42
    PRED_TYPE               shift, and go to state 43
    TEXREF_TYPE             shift, and go to state 44
    SAMPLERREF_TYPE         shift, and go to state 45
    SURFREF_TYPE            shift, and go to state 46
    V2_TYPE                 shift, and go to state 47
    V3_TYPE                 shift, and go to state 48
    V4_TYPE                 shift, and go to state 49
    PRED                    shift, and go to state 115
    RIGHT_BRACE             shift, and go to state 149

    $default  reduce using rule 52 ($@12)

    function_decl          go to state 116
    function_decl_header   go to state 52
    $@12                   go to state 150
    directive_statement    go to state 151
    variable_declaration   go to state 54
    variable_spec          go to state 55
    var_spec_list          go to state 56
    var_spec               go to state 57
    align_spec             go to state 58
    space_spec             go to state 59
    addressable_spec       go to state 60
    type_spec              go to state 61
    vector_spec            go to state 62
    scalar_type            go to state 63
    instruction_statement  go to state 152
    instruction            go to state 121
    opcode_spec            go to state 122
    pred_spec              go to state 123


State 118

   47 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE
   55 statement_list: $@13 . statement_block

    LEFT_BRACE  shift, and go to state 96

    statement_block  go to state 153


State 119

   48 statement_list: directive_statement .

    $default  reduce using rule 48 (statement_list)


State 120

   49 statement_list: instruction_statement .

    $default  reduce using rule 49 (statement_list)


State 121

  127 instruction_statement: instruction . SEMI_COLON

    SEMI_COLON  shift, and go to state 154


State 122

  131 instruction: opcode_spec . LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  132            | opcode_spec . operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  133            | opcode_spec . operand COMMA LEFT_PAREN RIGHT_PAREN
  134            | opcode_spec . operand_list
  135            | opcode_spec .  [SEMI_COLON]
  228 operand_list: . operand
  229             | . operand COMMA operand_list
  230 operand: . IDENTIFIER
  231        | . EXCLAMATION IDENTIFIER
  232        | . MINUS IDENTIFIER
  233        | . memory_operand
  234        | . literal_operand
  235        | . builtin_operand
  236        | . vector_operand
  237        | . MINUS vector_operand
  238        | . tex_operand
  239        | . IDENTIFIER PLUS INT_OPERAND
  240        | . IDENTIFIER LO_OPTION
  241        | . MINUS IDENTIFIER LO_OPTION
  242        | . IDENTIFIER HI_OPTION
  243        | . MINUS IDENTIFIER HI_OPTION
  244        | . IDENTIFIER PIPE IDENTIFIER
  245        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | . IDENTIFIER BACKSLASH IDENTIFIER
  248        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  256 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | . SPECIAL_REGISTER
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 155
    INT_OPERAND          shift, and go to state 137
    FLOAT_OPERAND        shift, and go to state 138
    DOUBLE_OPERAND       shift, and go to state 139
    LEFT_SQUARE_BRACKET  shift, and go to state 156
    SPECIAL_REGISTER     shift, and go to state 157
    MINUS                shift, and go to state 158
    EXCLAMATION          shift, and go to state 159
    LEFT_BRACE           shift, and go to state 160
    LEFT_PAREN           shift, and go to state 161

    $default  reduce using rule 135 (instruction)

    operand_list     go to state 162
    operand          go to state 163
    vector_operand   go to state 164
    tex_operand      go to state 165
    builtin_operand  go to state 166
    memory_operand   go to state 167
    literal_operand  go to state 168


State 123

  129 instruction_statement: pred_spec . instruction SEMI_COLON
  131 instruction: . opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  132            | . opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  133            | . opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  134            | . opcode_spec operand_list
  135            | . opcode_spec
  137 opcode_spec: . OPCODE $@15 option_list
  138            | . OPCODE

    OPCODE  shift, and go to state 113

    instruction  go to state 169
    opcode_spec  go to state 122


State 124

   12 block_spec: MAXNCTAPERSM_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 12 (block_spec)


State 125

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND . COMMA INT_OPERAND COMMA INT_OPERAND

    COMMA  shift, and go to state 170


State 126

   11 block_spec: MINNCTAPERSM_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 11 (block_spec)


State 127

    9 function_defn: function_decl $@2 block_spec_list $@3 . statement_block
   47 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 96

    statement_block  go to state 171


State 128

   14 block_spec_list: block_spec_list block_spec .

    $default  reduce using rule 14 (block_spec_list)


State 129

   36 $@10: . %empty
   37 param_entry: PARAM_DIRECTIVE . $@10 variable_spec ptr_spec identifier_spec

    $default  reduce using rule 36 ($@10)

    $@10  go to state 172


State 130

   38 $@11: . %empty
   39 param_entry: REG_DIRECTIVE . $@11 variable_spec identifier_spec

    $default  reduce using rule 38 ($@11)

    $@11  go to state 173


State 131

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry . RIGHT_PAREN $@5 function_ident_param

    RIGHT_PAREN  shift, and go to state 174


State 132

   23 function_ident_param: IDENTIFIER $@7 . LEFT_PAREN $@8 param_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 175


State 133

   77 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 176


State 134

   76 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 76 (identifier_spec)


State 135

   75 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND . RIGHT_ANGLE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 177


State 136

   73 identifier_list: identifier_list COMMA identifier_spec .

    $default  reduce using rule 73 (identifier_list)


State 137

  270 literal_operand: INT_OPERAND .

    $default  reduce using rule 270 (literal_operand)


State 138

  271 literal_operand: FLOAT_OPERAND .

    $default  reduce using rule 271 (literal_operand)


State 139

  272 literal_operand: DOUBLE_OPERAND .

    $default  reduce using rule 272 (literal_operand)


State 140

  123 initializer_list: . LEFT_BRACE literal_list RIGHT_BRACE
  123                 | LEFT_BRACE . literal_list RIGHT_BRACE
  124                 | . LEFT_BRACE initializer_list RIGHT_BRACE
  124                 | LEFT_BRACE . initializer_list RIGHT_BRACE
  125 literal_list: . literal_operand
  126             | . literal_list COMMA literal_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    INT_OPERAND     shift, and go to state 137
    FLOAT_OPERAND   shift, and go to state 138
    DOUBLE_OPERAND  shift, and go to state 139
    LEFT_BRACE      shift, and go to state 140

    initializer_list  go to state 178
    literal_list      go to state 179
    literal_operand   go to state 180


State 141

   68 variable_declaration: variable_spec identifier_spec EQUALS initializer_list .

    $default  reduce using rule 68 (variable_declaration)


State 142

   69 variable_declaration: variable_spec identifier_spec EQUALS literal_operand .

    $default  reduce using rule 69 (variable_declaration)


State 143

   70 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA . INT_OPERAND

    INT_OPERAND  shift, and go to state 181


State 144

   61 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 182


State 145

   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE
  137 opcode_spec: OPCODE $@15 . option_list
  152 option_list: . option
  153            | . option option_list
  154 option: . type_spec
  155       | . compare_spec
  156       | . addressable_spec
  157       | . rounding_mode
  158       | . SYNC_OPTION
  159       | . ARRIVE_OPTION
  160       | . RED_OPTION
  161       | . UNI_OPTION
  162       | . WIDE_OPTION
  163       | . ANY_OPTION
  164       | . ALL_OPTION
  165       | . BALLOT_OPTION
  166       | . GLOBAL_OPTION
  167       | . CTA_OPTION
  168       | . SYS_OPTION
  169       | . GEOM_MODIFIER_1D
  170       | . GEOM_MODIFIER_2D
  171       | . GEOM_MODIFIER_3D
  172       | . SAT_OPTION
  173       | . FTZ_OPTION
  174       | . NEG_OPTION
  175       | . APPROX_OPTION
  176       | . FULL_OPTION
  177       | . EXIT_OPTION
  178       | . ABS_OPTION
  179       | . atomic_operation_spec
  180       | . TO_OPTION
  181       | . HALF_OPTION
  182       | . CA_OPTION
  183       | . CG_OPTION
  184       | . CS_OPTION
  185       | . LU_OPTION
  186       | . CV_OPTION
  187       | . WB_OPTION
  188       | . WT_OPTION
  189 atomic_operation_spec: . ATOMIC_AND
  190                      | . ATOMIC_POPC
  191                      | . ATOMIC_OR
  192                      | . ATOMIC_XOR
  193                      | . ATOMIC_CAS
  194                      | . ATOMIC_EXCH
  195                      | . ATOMIC_ADD
  196                      | . ATOMIC_INC
  197                      | . ATOMIC_DEC
  198                      | . ATOMIC_MIN
  199                      | . ATOMIC_MAX
  200 rounding_mode: . floating_point_rounding_mode
  201              | . integer_rounding_mode
  202 floating_point_rounding_mode: . RN_OPTION
  203                             | . RZ_OPTION
  204                             | . RM_OPTION
  205                             | . RP_OPTION
  206 integer_rounding_mode: . RNI_OPTION
  207                      | . RZI_OPTION
  208                      | . RMI_OPTION
  209                      | . RPI_OPTION
  210 compare_spec: . EQ_OPTION
  211             | . NE_OPTION
  212             | . LT_OPTION
  213             | . LE_OPTION
  214             | . GT_OPTION
  215             | . GE_OPTION
  216             | . LO_OPTION
  217             | . LS_OPTION
  218             | . HI_OPTION
  219             | . HS_OPTION
  220             | . EQU_OPTION
  221             | . NEU_OPTION
  222             | . LTU_OPTION
  223             | . LEU_OPTION
  224             | . GTU_OPTION
  225             | . GEU_OPTION
  226             | . NUM_OPTION
  227             | . NAN_OPTION

    CONST_DIRECTIVE   shift, and go to state 4
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    SHARED_DIRECTIVE  shift, and go to state 16
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    S8_TYPE           shift, and go to state 25
    S16_TYPE          shift, and go to state 26
    S32_TYPE          shift, and go to state 27
    S64_TYPE          shift, and go to state 28
    U8_TYPE           shift, and go to state 29
    U16_TYPE          shift, and go to state 30
    U32_TYPE          shift, and go to state 31
    U64_TYPE          shift, and go to state 32
    F16_TYPE          shift, and go to state 33
    F32_TYPE          shift, and go to state 34
    F64_TYPE          shift, and go to state 35
    FF64_TYPE         shift, and go to state 36
    B8_TYPE           shift, and go to state 37
    B16_TYPE          shift, and go to state 38
    B32_TYPE          shift, and go to state 39
    B64_TYPE          shift, and go to state 40
    BB64_TYPE         shift, and go to state 41
    BB128_TYPE        shift, and go to state 42
    PRED_TYPE         shift, and go to state 43
    TEXREF_TYPE       shift, and go to state 44
    SAMPLERREF_TYPE   shift, and go to state 45
    SURFREF_TYPE      shift, and go to state 46
    V2_TYPE           shift, and go to state 47
    V3_TYPE           shift, and go to state 48
    V4_TYPE           shift, and go to state 49
    HALF_OPTION       shift, and go to state 183
    EQ_OPTION         shift, and go to state 184
    NE_OPTION         shift, and go to state 185
    LT_OPTION         shift, and go to state 186
    LE_OPTION         shift, and go to state 187
    GT_OPTION         shift, and go to state 188
    GE_OPTION         shift, and go to state 189
    LO_OPTION         shift, and go to state 190
    LS_OPTION         shift, and go to state 191
    HI_OPTION         shift, and go to state 192
    HS_OPTION         shift, and go to state 193
    EQU_OPTION        shift, and go to state 194
    NEU_OPTION        shift, and go to state 195
    LTU_OPTION        shift, and go to state 196
    LEU_OPTION        shift, and go to state 197
    GTU_OPTION        shift, and go to state 198
    GEU_OPTION        shift, and go to state 199
    NUM_OPTION        shift, and go to state 200
    NAN_OPTION        shift, and go to state 201
    WIDE_OPTION       shift, and go to state 202
    RN_OPTION         shift, and go to state 203
    RZ_OPTION         shift, and go to state 204
    RM_OPTION         shift, and go to state 205
    RP_OPTION         shift, and go to state 206
    RNI_OPTION        shift, and go to state 207
    RZI_OPTION        shift, and go to state 208
    RMI_OPTION        shift, and go to state 209
    RPI_OPTION        shift, and go to state 210
    UNI_OPTION        shift, and go to state 211
    GEOM_MODIFIER_1D  shift, and go to state 212
    GEOM_MODIFIER_2D  shift, and go to state 213
    GEOM_MODIFIER_3D  shift, and go to state 214
    SAT_OPTION        shift, and go to state 215
    FTZ_OPTION        shift, and go to state 216
    NEG_OPTION        shift, and go to state 217
    SYNC_OPTION       shift, and go to state 218
    RED_OPTION        shift, and go to state 219
    ARRIVE_OPTION     shift, and go to state 220
    ATOMIC_POPC       shift, and go to state 221
    ATOMIC_AND        shift, and go to state 222
    ATOMIC_OR         shift, and go to state 223
    ATOMIC_XOR        shift, and go to state 224
    ATOMIC_CAS        shift, and go to state 225
    ATOMIC_EXCH       shift, and go to state 226
    ATOMIC_ADD        shift, and go to state 227
    ATOMIC_INC        shift, and go to state 228
    ATOMIC_DEC        shift, and go to state 229
    ATOMIC_MIN        shift, and go to state 230
    ATOMIC_MAX        shift, and go to state 231
    APPROX_OPTION     shift, and go to state 232
    FULL_OPTION       shift, and go to state 233
    ANY_OPTION        shift, and go to state 234
    ALL_OPTION        shift, and go to state 235
    BALLOT_OPTION     shift, and go to state 236
    GLOBAL_OPTION     shift, and go to state 237
    CTA_OPTION        shift, and go to state 238
    SYS_OPTION        shift, and go to state 239
    EXIT_OPTION       shift, and go to state 240
    ABS_OPTION        shift, and go to state 241
    TO_OPTION         shift, and go to state 242
    CA_OPTION         shift, and go to state 243
    CG_OPTION         shift, and go to state 244
    CS_OPTION         shift, and go to state 245
    LU_OPTION         shift, and go to state 246
    CV_OPTION         shift, and go to state 247
    WB_OPTION         shift, and go to state 248
    WT_OPTION         shift, and go to state 249

    addressable_spec              go to state 250
    type_spec                     go to state 251
    vector_spec                   go to state 62
    scalar_type                   go to state 63
    option_list                   go to state 252
    option                        go to state 253
    atomic_operation_spec         go to state 254
    rounding_mode                 go to state 255
    floating_point_rounding_mode  go to state 256
    integer_rounding_mode         go to state 257
    compare_spec                  go to state 258


State 146

  128 instruction_statement: IDENTIFIER COLON .

    $default  reduce using rule 128 (instruction_statement)


State 147

  139 pred_spec: PRED IDENTIFIER .  [OPCODE]
  141          | PRED IDENTIFIER . LT_OPTION
  142          | PRED IDENTIFIER . EQ_OPTION
  143          | PRED IDENTIFIER . LE_OPTION
  144          | PRED IDENTIFIER . NE_OPTION
  145          | PRED IDENTIFIER . GE_OPTION
  146          | PRED IDENTIFIER . EQU_OPTION
  147          | PRED IDENTIFIER . GTU_OPTION
  148          | PRED IDENTIFIER . NEU_OPTION
  149          | PRED IDENTIFIER . CF_OPTION
  150          | PRED IDENTIFIER . SF_OPTION
  151          | PRED IDENTIFIER . NSF_OPTION

    EQ_OPTION   shift, and go to state 259
    NE_OPTION   shift, and go to state 260
    LT_OPTION   shift, and go to state 261
    LE_OPTION   shift, and go to state 262
    GE_OPTION   shift, and go to state 263
    EQU_OPTION  shift, and go to state 264
    NEU_OPTION  shift, and go to state 265
    GTU_OPTION  shift, and go to state 266
    CF_OPTION   shift, and go to state 267
    SF_OPTION   shift, and go to state 268
    NSF_OPTION  shift, and go to state 269

    $default  reduce using rule 139 (pred_spec)


State 148

  140 pred_spec: PRED EXCLAMATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 270


State 149

   47 statement_block: LEFT_BRACE statement_list RIGHT_BRACE .

    $default  reduce using rule 47 (statement_block)


State 150

   47 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE
   53 statement_list: statement_list $@12 . statement_block

    LEFT_BRACE  shift, and go to state 96

    statement_block  go to state 271


State 151

   50 statement_list: statement_list directive_statement .

    $default  reduce using rule 50 (statement_list)


State 152

   51 statement_list: statement_list instruction_statement .

    $default  reduce using rule 51 (statement_list)


State 153

   55 statement_list: $@13 statement_block .

    $default  reduce using rule 55 (statement_list)


State 154

  127 instruction_statement: instruction SEMI_COLON .

    $default  reduce using rule 127 (instruction_statement)


State 155

  230 operand: IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  239        | IDENTIFIER . PLUS INT_OPERAND
  240        | IDENTIFIER . LO_OPTION
  242        | IDENTIFIER . HI_OPTION
  244        | IDENTIFIER . PIPE IDENTIFIER
  245        | IDENTIFIER . PIPE IDENTIFIER LO_OPTION
  246        | IDENTIFIER . PIPE IDENTIFIER HI_OPTION
  247        | IDENTIFIER . BACKSLASH IDENTIFIER
  248        | IDENTIFIER . BACKSLASH IDENTIFIER LO_OPTION
  249        | IDENTIFIER . BACKSLASH IDENTIFIER HI_OPTION
  259 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LO_OPTION            shift, and go to state 272
    HI_OPTION            shift, and go to state 273
    LEFT_SQUARE_BRACKET  shift, and go to state 274
    PLUS                 shift, and go to state 275
    PIPE                 shift, and go to state 276
    BACKSLASH            shift, and go to state 277

    $default  reduce using rule 230 (operand)


State 156

  255 tex_operand: LEFT_SQUARE_BRACKET . IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  258 memory_operand: LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET
  273 address_expression: . IDENTIFIER
  274                   | . IDENTIFIER LO_OPTION
  275                   | . IDENTIFIER HI_OPTION
  276                   | . IDENTIFIER PLUS INT_OPERAND
  277                   | . INT_OPERAND

    IDENTIFIER   shift, and go to state 278
    INT_OPERAND  shift, and go to state 279

    address_expression  go to state 280


State 157

  256 builtin_operand: SPECIAL_REGISTER . DIMENSION_MODIFIER
  257                | SPECIAL_REGISTER .  [COMMA, SEMI_COLON, RIGHT_PAREN]

    DIMENSION_MODIFIER  shift, and go to state 281

    $default  reduce using rule 257 (builtin_operand)


State 158

  232 operand: MINUS . IDENTIFIER
  237        | MINUS . vector_operand
  241        | MINUS . IDENTIFIER LO_OPTION
  243        | MINUS . IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  262               | MINUS . memory_operand

    IDENTIFIER           shift, and go to state 282
    LEFT_SQUARE_BRACKET  shift, and go to state 283
    MINUS                shift, and go to state 284
    LEFT_BRACE           shift, and go to state 160

    vector_operand  go to state 285
    memory_operand  go to state 286


State 159

  231 operand: EXCLAMATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 287


State 160

  250 vector_operand: LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | LEFT_BRACE . IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 288


State 161

  131 instruction: opcode_spec LEFT_PAREN . operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  230 operand: . IDENTIFIER
  231        | . EXCLAMATION IDENTIFIER
  232        | . MINUS IDENTIFIER
  233        | . memory_operand
  234        | . literal_operand
  235        | . builtin_operand
  236        | . vector_operand
  237        | . MINUS vector_operand
  238        | . tex_operand
  239        | . IDENTIFIER PLUS INT_OPERAND
  240        | . IDENTIFIER LO_OPTION
  241        | . MINUS IDENTIFIER LO_OPTION
  242        | . IDENTIFIER HI_OPTION
  243        | . MINUS IDENTIFIER HI_OPTION
  244        | . IDENTIFIER PIPE IDENTIFIER
  245        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | . IDENTIFIER BACKSLASH IDENTIFIER
  248        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  256 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | . SPECIAL_REGISTER
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 155
    INT_OPERAND          shift, and go to state 137
    FLOAT_OPERAND        shift, and go to state 138
    DOUBLE_OPERAND       shift, and go to state 139
    LEFT_SQUARE_BRACKET  shift, and go to state 156
    SPECIAL_REGISTER     shift, and go to state 157
    MINUS                shift, and go to state 158
    EXCLAMATION          shift, and go to state 159
    LEFT_BRACE           shift, and go to state 160

    operand          go to state 289
    vector_operand   go to state 164
    tex_operand      go to state 165
    builtin_operand  go to state 166
    memory_operand   go to state 167
    literal_operand  go to state 168


State 162

  134 instruction: opcode_spec operand_list .

    $default  reduce using rule 134 (instruction)


State 163

  132 instruction: opcode_spec operand . COMMA LEFT_PAREN operand_list RIGHT_PAREN
  133            | opcode_spec operand . COMMA LEFT_PAREN RIGHT_PAREN
  228 operand_list: operand .  [SEMI_COLON]
  229             | operand . COMMA operand_list

    COMMA  shift, and go to state 290

    $default  reduce using rule 228 (operand_list)


State 164

  236 operand: vector_operand .

    $default  reduce using rule 236 (operand)


State 165

  238 operand: tex_operand .

    $default  reduce using rule 238 (operand)


State 166

  235 operand: builtin_operand .

    $default  reduce using rule 235 (operand)


State 167

  233 operand: memory_operand .

    $default  reduce using rule 233 (operand)


State 168

  234 operand: literal_operand .

    $default  reduce using rule 234 (operand)


State 169

  129 instruction_statement: pred_spec instruction . SEMI_COLON

    SEMI_COLON  shift, and go to state 291


State 170

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA . INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 292


State 171

    9 function_defn: function_decl $@2 block_spec_list $@3 statement_block .

    $default  reduce using rule 9 (function_defn)


State 172

   37 param_entry: PARAM_DIRECTIVE $@10 . variable_spec ptr_spec identifier_spec
   71 variable_spec: . var_spec_list
   78 var_spec_list: . var_spec
   79              | . var_spec_list var_spec
   80 var_spec: . space_spec
   81         | . type_spec
   82         | . align_spec
   83         | . EXTERN_DIRECTIVE
   84         | . WEAK_DIRECTIVE
   85 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   86 space_spec: . REG_DIRECTIVE
   87           | . SREG_DIRECTIVE
   88           | . addressable_spec
   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE

    ALIGN_DIRECTIVE   shift, and go to state 3
    CONST_DIRECTIVE   shift, and go to state 4
    EXTERN_DIRECTIVE  shift, and go to state 86
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    REG_DIRECTIVE     shift, and go to state 15
    SHARED_DIRECTIVE  shift, and go to state 16
    SREG_DIRECTIVE    shift, and go to state 17
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    WEAK_DIRECTIVE    shift, and go to state 87
    S8_TYPE           shift, and go to state 25
    S16_TYPE          shift, and go to state 26
    S32_TYPE          shift, and go to state 27
    S64_TYPE          shift, and go to state 28
    U8_TYPE           shift, and go to state 29
    U16_TYPE          shift, and go to state 30
    U32_TYPE          shift, and go to state 31
    U64_TYPE          shift, and go to state 32
    F16_TYPE          shift, and go to state 33
    F32_TYPE          shift, and go to state 34
    F64_TYPE          shift, and go to state 35
    FF64_TYPE         shift, and go to state 36
    B8_TYPE           shift, and go to state 37
    B16_TYPE          shift, and go to state 38
    B32_TYPE          shift, and go to state 39
    B64_TYPE          shift, and go to state 40
    BB64_TYPE         shift, and go to state 41
    BB128_TYPE        shift, and go to state 42
    PRED_TYPE         shift, and go to state 43
    TEXREF_TYPE       shift, and go to state 44
    SAMPLERREF_TYPE   shift, and go to state 45
    SURFREF_TYPE      shift, and go to state 46
    V2_TYPE           shift, and go to state 47
    V3_TYPE           shift, and go to state 48
    V4_TYPE           shift, and go to state 49

    variable_spec     go to state 293
    var_spec_list     go to state 56
    var_spec          go to state 57
    align_spec        go to state 58
    space_spec        go to state 59
    addressable_spec  go to state 60
    type_spec         go to state 61
    vector_spec       go to state 62
    scalar_type       go to state 63


State 173

   39 param_entry: REG_DIRECTIVE $@11 . variable_spec identifier_spec
   71 variable_spec: . var_spec_list
   78 var_spec_list: . var_spec
   79              | . var_spec_list var_spec
   80 var_spec: . space_spec
   81         | . type_spec
   82         | . align_spec
   83         | . EXTERN_DIRECTIVE
   84         | . WEAK_DIRECTIVE
   85 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   86 space_spec: . REG_DIRECTIVE
   87           | . SREG_DIRECTIVE
   88           | . addressable_spec
   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE

    ALIGN_DIRECTIVE   shift, and go to state 3
    CONST_DIRECTIVE   shift, and go to state 4
    EXTERN_DIRECTIVE  shift, and go to state 86
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    REG_DIRECTIVE     shift, and go to state 15
    SHARED_DIRECTIVE  shift, and go to state 16
    SREG_DIRECTIVE    shift, and go to state 17
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    WEAK_DIRECTIVE    shift, and go to state 87
    S8_TYPE           shift, and go to state 25
    S16_TYPE          shift, and go to state 26
    S32_TYPE          shift, and go to state 27
    S64_TYPE          shift, and go to state 28
    U8_TYPE           shift, and go to state 29
    U16_TYPE          shift, and go to state 30
    U32_TYPE          shift, and go to state 31
    U64_TYPE          shift, and go to state 32
    F16_TYPE          shift, and go to state 33
    F32_TYPE          shift, and go to state 34
    F64_TYPE          shift, and go to state 35
    FF64_TYPE         shift, and go to state 36
    B8_TYPE           shift, and go to state 37
    B16_TYPE          shift, and go to state 38
    B32_TYPE          shift, and go to state 39
    B64_TYPE          shift, and go to state 40
    BB64_TYPE         shift, and go to state 41
    BB128_TYPE        shift, and go to state 42
    PRED_TYPE         shift, and go to state 43
    TEXREF_TYPE       shift, and go to state 44
    SAMPLERREF_TYPE   shift, and go to state 45
    SURFREF_TYPE      shift, and go to state 46
    V2_TYPE           shift, and go to state 47
    V3_TYPE           shift, and go to state 48
    V4_TYPE           shift, and go to state 49

    variable_spec     go to state 294
    var_spec_list     go to state 56
    var_spec          go to state 57
    align_spec        go to state 58
    space_spec        go to state 59
    addressable_spec  go to state 60
    type_spec         go to state 61
    vector_spec       go to state 62
    scalar_type       go to state 63


State 174

   16 $@5: . %empty
   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN . $@5 function_ident_param

    $default  reduce using rule 16 ($@5)

    $@5  go to state 295


State 175

   22 $@8: . %empty
   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN . $@8 param_list RIGHT_PAREN

    $default  reduce using rule 22 ($@8)

    $@8  go to state 296


State 176

   77 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 77 (identifier_spec)


State 177

   75 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET .

    $default  reduce using rule 75 (identifier_spec)


State 178

  124 initializer_list: LEFT_BRACE initializer_list . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 297


State 179

  123 initializer_list: LEFT_BRACE literal_list . RIGHT_BRACE
  126 literal_list: literal_list . COMMA literal_operand

    COMMA        shift, and go to state 298
    RIGHT_BRACE  shift, and go to state 299


State 180

  125 literal_list: literal_operand .

    $default  reduce using rule 125 (literal_list)


State 181

   70 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND .

    $default  reduce using rule 70 (variable_declaration)


State 182

   61 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER .

    $default  reduce using rule 61 (directive_statement)


State 183

  181 option: HALF_OPTION .

    $default  reduce using rule 181 (option)


State 184

  210 compare_spec: EQ_OPTION .

    $default  reduce using rule 210 (compare_spec)


State 185

  211 compare_spec: NE_OPTION .

    $default  reduce using rule 211 (compare_spec)


State 186

  212 compare_spec: LT_OPTION .

    $default  reduce using rule 212 (compare_spec)


State 187

  213 compare_spec: LE_OPTION .

    $default  reduce using rule 213 (compare_spec)


State 188

  214 compare_spec: GT_OPTION .

    $default  reduce using rule 214 (compare_spec)


State 189

  215 compare_spec: GE_OPTION .

    $default  reduce using rule 215 (compare_spec)


State 190

  216 compare_spec: LO_OPTION .

    $default  reduce using rule 216 (compare_spec)


State 191

  217 compare_spec: LS_OPTION .

    $default  reduce using rule 217 (compare_spec)


State 192

  218 compare_spec: HI_OPTION .

    $default  reduce using rule 218 (compare_spec)


State 193

  219 compare_spec: HS_OPTION .

    $default  reduce using rule 219 (compare_spec)


State 194

  220 compare_spec: EQU_OPTION .

    $default  reduce using rule 220 (compare_spec)


State 195

  221 compare_spec: NEU_OPTION .

    $default  reduce using rule 221 (compare_spec)


State 196

  222 compare_spec: LTU_OPTION .

    $default  reduce using rule 222 (compare_spec)


State 197

  223 compare_spec: LEU_OPTION .

    $default  reduce using rule 223 (compare_spec)


State 198

  224 compare_spec: GTU_OPTION .

    $default  reduce using rule 224 (compare_spec)


State 199

  225 compare_spec: GEU_OPTION .

    $default  reduce using rule 225 (compare_spec)


State 200

  226 compare_spec: NUM_OPTION .

    $default  reduce using rule 226 (compare_spec)


State 201

  227 compare_spec: NAN_OPTION .

    $default  reduce using rule 227 (compare_spec)


State 202

  162 option: WIDE_OPTION .

    $default  reduce using rule 162 (option)


State 203

  202 floating_point_rounding_mode: RN_OPTION .

    $default  reduce using rule 202 (floating_point_rounding_mode)


State 204

  203 floating_point_rounding_mode: RZ_OPTION .

    $default  reduce using rule 203 (floating_point_rounding_mode)


State 205

  204 floating_point_rounding_mode: RM_OPTION .

    $default  reduce using rule 204 (floating_point_rounding_mode)


State 206

  205 floating_point_rounding_mode: RP_OPTION .

    $default  reduce using rule 205 (floating_point_rounding_mode)


State 207

  206 integer_rounding_mode: RNI_OPTION .

    $default  reduce using rule 206 (integer_rounding_mode)


State 208

  207 integer_rounding_mode: RZI_OPTION .

    $default  reduce using rule 207 (integer_rounding_mode)


State 209

  208 integer_rounding_mode: RMI_OPTION .

    $default  reduce using rule 208 (integer_rounding_mode)


State 210

  209 integer_rounding_mode: RPI_OPTION .

    $default  reduce using rule 209 (integer_rounding_mode)


State 211

  161 option: UNI_OPTION .

    $default  reduce using rule 161 (option)


State 212

  169 option: GEOM_MODIFIER_1D .

    $default  reduce using rule 169 (option)


State 213

  170 option: GEOM_MODIFIER_2D .

    $default  reduce using rule 170 (option)


State 214

  171 option: GEOM_MODIFIER_3D .

    $default  reduce using rule 171 (option)


State 215

  172 option: SAT_OPTION .

    $default  reduce using rule 172 (option)


State 216

  173 option: FTZ_OPTION .

    $default  reduce using rule 173 (option)


State 217

  174 option: NEG_OPTION .

    $default  reduce using rule 174 (option)


State 218

  158 option: SYNC_OPTION .

    $default  reduce using rule 158 (option)


State 219

  160 option: RED_OPTION .

    $default  reduce using rule 160 (option)


State 220

  159 option: ARRIVE_OPTION .

    $default  reduce using rule 159 (option)


State 221

  190 atomic_operation_spec: ATOMIC_POPC .

    $default  reduce using rule 190 (atomic_operation_spec)


State 222

  189 atomic_operation_spec: ATOMIC_AND .

    $default  reduce using rule 189 (atomic_operation_spec)


State 223

  191 atomic_operation_spec: ATOMIC_OR .

    $default  reduce using rule 191 (atomic_operation_spec)


State 224

  192 atomic_operation_spec: ATOMIC_XOR .

    $default  reduce using rule 192 (atomic_operation_spec)


State 225

  193 atomic_operation_spec: ATOMIC_CAS .

    $default  reduce using rule 193 (atomic_operation_spec)


State 226

  194 atomic_operation_spec: ATOMIC_EXCH .

    $default  reduce using rule 194 (atomic_operation_spec)


State 227

  195 atomic_operation_spec: ATOMIC_ADD .

    $default  reduce using rule 195 (atomic_operation_spec)


State 228

  196 atomic_operation_spec: ATOMIC_INC .

    $default  reduce using rule 196 (atomic_operation_spec)


State 229

  197 atomic_operation_spec: ATOMIC_DEC .

    $default  reduce using rule 197 (atomic_operation_spec)


State 230

  198 atomic_operation_spec: ATOMIC_MIN .

    $default  reduce using rule 198 (atomic_operation_spec)


State 231

  199 atomic_operation_spec: ATOMIC_MAX .

    $default  reduce using rule 199 (atomic_operation_spec)


State 232

  175 option: APPROX_OPTION .

    $default  reduce using rule 175 (option)


State 233

  176 option: FULL_OPTION .

    $default  reduce using rule 176 (option)


State 234

  163 option: ANY_OPTION .

    $default  reduce using rule 163 (option)


State 235

  164 option: ALL_OPTION .

    $default  reduce using rule 164 (option)


State 236

  165 option: BALLOT_OPTION .

    $default  reduce using rule 165 (option)


State 237

  166 option: GLOBAL_OPTION .

    $default  reduce using rule 166 (option)


State 238

  167 option: CTA_OPTION .

    $default  reduce using rule 167 (option)


State 239

  168 option: SYS_OPTION .

    $default  reduce using rule 168 (option)


State 240

  177 option: EXIT_OPTION .

    $default  reduce using rule 177 (option)


State 241

  178 option: ABS_OPTION .

    $default  reduce using rule 178 (option)


State 242

  180 option: TO_OPTION .

    $default  reduce using rule 180 (option)


State 243

  182 option: CA_OPTION .

    $default  reduce using rule 182 (option)


State 244

  183 option: CG_OPTION .

    $default  reduce using rule 183 (option)


State 245

  184 option: CS_OPTION .

    $default  reduce using rule 184 (option)


State 246

  185 option: LU_OPTION .

    $default  reduce using rule 185 (option)


State 247

  186 option: CV_OPTION .

    $default  reduce using rule 186 (option)


State 248

  187 option: WB_OPTION .

    $default  reduce using rule 187 (option)


State 249

  188 option: WT_OPTION .

    $default  reduce using rule 188 (option)


State 250

  156 option: addressable_spec .

    $default  reduce using rule 156 (option)


State 251

  154 option: type_spec .

    $default  reduce using rule 154 (option)


State 252

  137 opcode_spec: OPCODE $@15 option_list .

    $default  reduce using rule 137 (opcode_spec)


State 253

   89 addressable_spec: . CONST_DIRECTIVE
   90                 | . GLOBAL_DIRECTIVE
   91                 | . LOCAL_DIRECTIVE
   92                 | . PARAM_DIRECTIVE
   93                 | . SHARED_DIRECTIVE
   94                 | . SURF_DIRECTIVE
   95                 | . TEX_DIRECTIVE
   96 type_spec: . scalar_type
   97          | . vector_spec scalar_type
   98 vector_spec: . V2_TYPE
   99            | . V3_TYPE
  100            | . V4_TYPE
  101 scalar_type: . S8_TYPE
  102            | . S16_TYPE
  103            | . S32_TYPE
  104            | . S64_TYPE
  105            | . U8_TYPE
  106            | . U16_TYPE
  107            | . U32_TYPE
  108            | . U64_TYPE
  109            | . F16_TYPE
  110            | . F32_TYPE
  111            | . F64_TYPE
  112            | . FF64_TYPE
  113            | . B8_TYPE
  114            | . B16_TYPE
  115            | . B32_TYPE
  116            | . B64_TYPE
  117            | . BB64_TYPE
  118            | . BB128_TYPE
  119            | . PRED_TYPE
  120            | . TEXREF_TYPE
  121            | . SAMPLERREF_TYPE
  122            | . SURFREF_TYPE
  152 option_list: . option
  152            | option .  [IDENTIFIER, INT_OPERAND, FLOAT_OPERAND, DOUBLE_OPERAND, LEFT_SQUARE_BRACKET, SPECIAL_REGISTER, MINUS, SEMI_COLON, EXCLAMATION, LEFT_BRACE, LEFT_PAREN]
  153            | . option option_list
  153            | option . option_list
  154 option: . type_spec
  155       | . compare_spec
  156       | . addressable_spec
  157       | . rounding_mode
  158       | . SYNC_OPTION
  159       | . ARRIVE_OPTION
  160       | . RED_OPTION
  161       | . UNI_OPTION
  162       | . WIDE_OPTION
  163       | . ANY_OPTION
  164       | . ALL_OPTION
  165       | . BALLOT_OPTION
  166       | . GLOBAL_OPTION
  167       | . CTA_OPTION
  168       | . SYS_OPTION
  169       | . GEOM_MODIFIER_1D
  170       | . GEOM_MODIFIER_2D
  171       | . GEOM_MODIFIER_3D
  172       | . SAT_OPTION
  173       | . FTZ_OPTION
  174       | . NEG_OPTION
  175       | . APPROX_OPTION
  176       | . FULL_OPTION
  177       | . EXIT_OPTION
  178       | . ABS_OPTION
  179       | . atomic_operation_spec
  180       | . TO_OPTION
  181       | . HALF_OPTION
  182       | . CA_OPTION
  183       | . CG_OPTION
  184       | . CS_OPTION
  185       | . LU_OPTION
  186       | . CV_OPTION
  187       | . WB_OPTION
  188       | . WT_OPTION
  189 atomic_operation_spec: . ATOMIC_AND
  190                      | . ATOMIC_POPC
  191                      | . ATOMIC_OR
  192                      | . ATOMIC_XOR
  193                      | . ATOMIC_CAS
  194                      | . ATOMIC_EXCH
  195                      | . ATOMIC_ADD
  196                      | . ATOMIC_INC
  197                      | . ATOMIC_DEC
  198                      | . ATOMIC_MIN
  199                      | . ATOMIC_MAX
  200 rounding_mode: . floating_point_rounding_mode
  201              | . integer_rounding_mode
  202 floating_point_rounding_mode: . RN_OPTION
  203                             | . RZ_OPTION
  204                             | . RM_OPTION
  205                             | . RP_OPTION
  206 integer_rounding_mode: . RNI_OPTION
  207                      | . RZI_OPTION
  208                      | . RMI_OPTION
  209                      | . RPI_OPTION
  210 compare_spec: . EQ_OPTION
  211             | . NE_OPTION
  212             | . LT_OPTION
  213             | . LE_OPTION
  214             | . GT_OPTION
  215             | . GE_OPTION
  216             | . LO_OPTION
  217             | . LS_OPTION
  218             | . HI_OPTION
  219             | . HS_OPTION
  220             | . EQU_OPTION
  221             | . NEU_OPTION
  222             | . LTU_OPTION
  223             | . LEU_OPTION
  224             | . GTU_OPTION
  225             | . GEU_OPTION
  226             | . NUM_OPTION
  227             | . NAN_OPTION

    CONST_DIRECTIVE   shift, and go to state 4
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    SHARED_DIRECTIVE  shift, and go to state 16
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    S8_TYPE           shift, and go to state 25
    S16_TYPE          shift, and go to state 26
    S32_TYPE          shift, and go to state 27
    S64_TYPE          shift, and go to state 28
    U8_TYPE           shift, and go to state 29
    U16_TYPE          shift, and go to state 30
    U32_TYPE          shift, and go to state 31
    U64_TYPE          shift, and go to state 32
    F16_TYPE          shift, and go to state 33
    F32_TYPE          shift, and go to state 34
    F64_TYPE          shift, and go to state 35
    FF64_TYPE         shift, and go to state 36
    B8_TYPE           shift, and go to state 37
    B16_TYPE          shift, and go to state 38
    B32_TYPE          shift, and go to state 39
    B64_TYPE          shift, and go to state 40
    BB64_TYPE         shift, and go to state 41
    BB128_TYPE        shift, and go to state 42
    PRED_TYPE         shift, and go to state 43
    TEXREF_TYPE       shift, and go to state 44
    SAMPLERREF_TYPE   shift, and go to state 45
    SURFREF_TYPE      shift, and go to state 46
    V2_TYPE           shift, and go to state 47
    V3_TYPE           shift, and go to state 48
    V4_TYPE           shift, and go to state 49
    HALF_OPTION       shift, and go to state 183
    EQ_OPTION         shift, and go to state 184
    NE_OPTION         shift, and go to state 185
    LT_OPTION         shift, and go to state 186
    LE_OPTION         shift, and go to state 187
    GT_OPTION         shift, and go to state 188
    GE_OPTION         shift, and go to state 189
    LO_OPTION         shift, and go to state 190
    LS_OPTION         shift, and go to state 191
    HI_OPTION         shift, and go to state 192
    HS_OPTION         shift, and go to state 193
    EQU_OPTION        shift, and go to state 194
    NEU_OPTION        shift, and go to state 195
    LTU_OPTION        shift, and go to state 196
    LEU_OPTION        shift, and go to state 197
    GTU_OPTION        shift, and go to state 198
    GEU_OPTION        shift, and go to state 199
    NUM_OPTION        shift, and go to state 200
    NAN_OPTION        shift, and go to state 201
    WIDE_OPTION       shift, and go to state 202
    RN_OPTION         shift, and go to state 203
    RZ_OPTION         shift, and go to state 204
    RM_OPTION         shift, and go to state 205
    RP_OPTION         shift, and go to state 206
    RNI_OPTION        shift, and go to state 207
    RZI_OPTION        shift, and go to state 208
    RMI_OPTION        shift, and go to state 209
    RPI_OPTION        shift, and go to state 210
    UNI_OPTION        shift, and go to state 211
    GEOM_MODIFIER_1D  shift, and go to state 212
    GEOM_MODIFIER_2D  shift, and go to state 213
    GEOM_MODIFIER_3D  shift, and go to state 214
    SAT_OPTION        shift, and go to state 215
    FTZ_OPTION        shift, and go to state 216
    NEG_OPTION        shift, and go to state 217
    SYNC_OPTION       shift, and go to state 218
    RED_OPTION        shift, and go to state 219
    ARRIVE_OPTION     shift, and go to state 220
    ATOMIC_POPC       shift, and go to state 221
    ATOMIC_AND        shift, and go to state 222
    ATOMIC_OR         shift, and go to state 223
    ATOMIC_XOR        shift, and go to state 224
    ATOMIC_CAS        shift, and go to state 225
    ATOMIC_EXCH       shift, and go to state 226
    ATOMIC_ADD        shift, and go to state 227
    ATOMIC_INC        shift, and go to state 228
    ATOMIC_DEC        shift, and go to state 229
    ATOMIC_MIN        shift, and go to state 230
    ATOMIC_MAX        shift, and go to state 231
    APPROX_OPTION     shift, and go to state 232
    FULL_OPTION       shift, and go to state 233
    ANY_OPTION        shift, and go to state 234
    ALL_OPTION        shift, and go to state 235
    BALLOT_OPTION     shift, and go to state 236
    GLOBAL_OPTION     shift, and go to state 237
    CTA_OPTION        shift, and go to state 238
    SYS_OPTION        shift, and go to state 239
    EXIT_OPTION       shift, and go to state 240
    ABS_OPTION        shift, and go to state 241
    TO_OPTION         shift, and go to state 242
    CA_OPTION         shift, and go to state 243
    CG_OPTION         shift, and go to state 244
    CS_OPTION         shift, and go to state 245
    LU_OPTION         shift, and go to state 246
    CV_OPTION         shift, and go to state 247
    WB_OPTION         shift, and go to state 248
    WT_OPTION         shift, and go to state 249

    $default  reduce using rule 152 (option_list)

    addressable_spec              go to state 250
    type_spec                     go to state 251
    vector_spec                   go to state 62
    scalar_type                   go to state 63
    option_list                   go to state 300
    option                        go to state 253
    atomic_operation_spec         go to state 254
    rounding_mode                 go to state 255
    floating_point_rounding_mode  go to state 256
    integer_rounding_mode         go to state 257
    compare_spec                  go to state 258


State 254

  179 option: atomic_operation_spec .

    $default  reduce using rule 179 (option)


State 255

  157 option: rounding_mode .

    $default  reduce using rule 157 (option)


State 256

  200 rounding_mode: floating_point_rounding_mode .

    $default  reduce using rule 200 (rounding_mode)


State 257

  201 rounding_mode: integer_rounding_mode .

    $default  reduce using rule 201 (rounding_mode)


State 258

  155 option: compare_spec .

    $default  reduce using rule 155 (option)


State 259

  142 pred_spec: PRED IDENTIFIER EQ_OPTION .

    $default  reduce using rule 142 (pred_spec)


State 260

  144 pred_spec: PRED IDENTIFIER NE_OPTION .

    $default  reduce using rule 144 (pred_spec)


State 261

  141 pred_spec: PRED IDENTIFIER LT_OPTION .

    $default  reduce using rule 141 (pred_spec)


State 262

  143 pred_spec: PRED IDENTIFIER LE_OPTION .

    $default  reduce using rule 143 (pred_spec)


State 263

  145 pred_spec: PRED IDENTIFIER GE_OPTION .

    $default  reduce using rule 145 (pred_spec)


State 264

  146 pred_spec: PRED IDENTIFIER EQU_OPTION .

    $default  reduce using rule 146 (pred_spec)


State 265

  148 pred_spec: PRED IDENTIFIER NEU_OPTION .

    $default  reduce using rule 148 (pred_spec)


State 266

  147 pred_spec: PRED IDENTIFIER GTU_OPTION .

    $default  reduce using rule 147 (pred_spec)


State 267

  149 pred_spec: PRED IDENTIFIER CF_OPTION .

    $default  reduce using rule 149 (pred_spec)


State 268

  150 pred_spec: PRED IDENTIFIER SF_OPTION .

    $default  reduce using rule 150 (pred_spec)


State 269

  151 pred_spec: PRED IDENTIFIER NSF_OPTION .

    $default  reduce using rule 151 (pred_spec)


State 270

  140 pred_spec: PRED EXCLAMATION IDENTIFIER .

    $default  reduce using rule 140 (pred_spec)


State 271

   53 statement_list: statement_list $@12 statement_block .

    $default  reduce using rule 53 (statement_list)


State 272

  240 operand: IDENTIFIER LO_OPTION .

    $default  reduce using rule 240 (operand)


State 273

  242 operand: IDENTIFIER HI_OPTION .

    $default  reduce using rule 242 (operand)


State 274

  259 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET
  260               | IDENTIFIER LEFT_SQUARE_BRACKET . literal_operand RIGHT_SQUARE_BRACKET
  261               | IDENTIFIER LEFT_SQUARE_BRACKET . twin_operand RIGHT_SQUARE_BRACKET
  263 twin_operand: . IDENTIFIER PLUS IDENTIFIER
  264             | . IDENTIFIER PLUS IDENTIFIER LO_OPTION
  265             | . IDENTIFIER PLUS IDENTIFIER HI_OPTION
  266             | . IDENTIFIER PLUS EQUALS IDENTIFIER
  267             | . IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION
  268             | . IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION
  269             | . IDENTIFIER PLUS EQUALS INT_OPERAND
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND
  273 address_expression: . IDENTIFIER
  274                   | . IDENTIFIER LO_OPTION
  275                   | . IDENTIFIER HI_OPTION
  276                   | . IDENTIFIER PLUS INT_OPERAND
  277                   | . INT_OPERAND

    IDENTIFIER      shift, and go to state 301
    INT_OPERAND     shift, and go to state 302
    FLOAT_OPERAND   shift, and go to state 138
    DOUBLE_OPERAND  shift, and go to state 139

    twin_operand        go to state 303
    literal_operand     go to state 304
    address_expression  go to state 305


State 275

  239 operand: IDENTIFIER PLUS . INT_OPERAND

    INT_OPERAND  shift, and go to state 306


State 276

  244 operand: IDENTIFIER PIPE . IDENTIFIER
  245        | IDENTIFIER PIPE . IDENTIFIER LO_OPTION
  246        | IDENTIFIER PIPE . IDENTIFIER HI_OPTION

    IDENTIFIER  shift, and go to state 307


State 277

  247 operand: IDENTIFIER BACKSLASH . IDENTIFIER
  248        | IDENTIFIER BACKSLASH . IDENTIFIER LO_OPTION
  249        | IDENTIFIER BACKSLASH . IDENTIFIER HI_OPTION

    IDENTIFIER  shift, and go to state 308


State 278

  255 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER . COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  273 address_expression: IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  274                   | IDENTIFIER . LO_OPTION
  275                   | IDENTIFIER . HI_OPTION
  276                   | IDENTIFIER . PLUS INT_OPERAND

    COMMA      shift, and go to state 309
    LO_OPTION  shift, and go to state 310
    HI_OPTION  shift, and go to state 311
    PLUS       shift, and go to state 312

    $default  reduce using rule 273 (address_expression)


State 279

  277 address_expression: INT_OPERAND .

    $default  reduce using rule 277 (address_expression)


State 280

  258 memory_operand: LEFT_SQUARE_BRACKET address_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 313


State 281

  256 builtin_operand: SPECIAL_REGISTER DIMENSION_MODIFIER .

    $default  reduce using rule 256 (builtin_operand)


State 282

  232 operand: MINUS IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  241        | MINUS IDENTIFIER . LO_OPTION
  243        | MINUS IDENTIFIER . HI_OPTION
  259 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LO_OPTION            shift, and go to state 314
    HI_OPTION            shift, and go to state 315
    LEFT_SQUARE_BRACKET  shift, and go to state 274

    $default  reduce using rule 232 (operand)


State 283

  258 memory_operand: LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET
  273 address_expression: . IDENTIFIER
  274                   | . IDENTIFIER LO_OPTION
  275                   | . IDENTIFIER HI_OPTION
  276                   | . IDENTIFIER PLUS INT_OPERAND
  277                   | . INT_OPERAND

    IDENTIFIER   shift, and go to state 316
    INT_OPERAND  shift, and go to state 279

    address_expression  go to state 280


State 284

  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  262               | MINUS . memory_operand

    IDENTIFIER           shift, and go to state 317
    LEFT_SQUARE_BRACKET  shift, and go to state 283
    MINUS                shift, and go to state 284

    memory_operand  go to state 286


State 285

  237 operand: MINUS vector_operand .

    $default  reduce using rule 237 (operand)


State 286

  262 memory_operand: MINUS memory_operand .

    $default  reduce using rule 262 (memory_operand)


State 287

  231 operand: EXCLAMATION IDENTIFIER .

    $default  reduce using rule 231 (operand)


State 288

  250 vector_operand: LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE
  251               | LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | LEFT_BRACE IDENTIFIER . RIGHT_BRACE

    COMMA        shift, and go to state 318
    RIGHT_BRACE  shift, and go to state 319


State 289

  131 instruction: opcode_spec LEFT_PAREN operand . RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 320


State 290

  132 instruction: opcode_spec operand COMMA . LEFT_PAREN operand_list RIGHT_PAREN
  133            | opcode_spec operand COMMA . LEFT_PAREN RIGHT_PAREN
  228 operand_list: . operand
  229             | . operand COMMA operand_list
  229             | operand COMMA . operand_list
  230 operand: . IDENTIFIER
  231        | . EXCLAMATION IDENTIFIER
  232        | . MINUS IDENTIFIER
  233        | . memory_operand
  234        | . literal_operand
  235        | . builtin_operand
  236        | . vector_operand
  237        | . MINUS vector_operand
  238        | . tex_operand
  239        | . IDENTIFIER PLUS INT_OPERAND
  240        | . IDENTIFIER LO_OPTION
  241        | . MINUS IDENTIFIER LO_OPTION
  242        | . IDENTIFIER HI_OPTION
  243        | . MINUS IDENTIFIER HI_OPTION
  244        | . IDENTIFIER PIPE IDENTIFIER
  245        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | . IDENTIFIER BACKSLASH IDENTIFIER
  248        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  256 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | . SPECIAL_REGISTER
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 155
    INT_OPERAND          shift, and go to state 137
    FLOAT_OPERAND        shift, and go to state 138
    DOUBLE_OPERAND       shift, and go to state 139
    LEFT_SQUARE_BRACKET  shift, and go to state 156
    SPECIAL_REGISTER     shift, and go to state 157
    MINUS                shift, and go to state 158
    EXCLAMATION          shift, and go to state 159
    LEFT_BRACE           shift, and go to state 160
    LEFT_PAREN           shift, and go to state 321

    operand_list     go to state 322
    operand          go to state 323
    vector_operand   go to state 164
    tex_operand      go to state 165
    builtin_operand  go to state 166
    memory_operand   go to state 167
    literal_operand  go to state 168


State 291

  129 instruction_statement: pred_spec instruction SEMI_COLON .

    $default  reduce using rule 129 (instruction_statement)


State 292

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND . COMMA INT_OPERAND

    COMMA  shift, and go to state 324


State 293

   37 param_entry: PARAM_DIRECTIVE $@10 variable_spec . ptr_spec identifier_spec
   40 ptr_spec: . %empty  [IDENTIFIER]
   41         | . PTR_DIRECTIVE ptr_space_spec ptr_align_spec
   42         | . PTR_DIRECTIVE ptr_align_spec

    PTR_DIRECTIVE  shift, and go to state 325

    $default  reduce using rule 40 (ptr_spec)

    ptr_spec  go to state 326


State 294

   39 param_entry: REG_DIRECTIVE $@11 variable_spec . identifier_spec
   74 identifier_spec: . IDENTIFIER
   75                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   76                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   77                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 83

    identifier_spec  go to state 327


State 295

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 . function_ident_param
   23 function_ident_param: . IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | . IDENTIFIER

    IDENTIFIER  shift, and go to state 104

    function_ident_param  go to state 328


State 296

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 . param_list RIGHT_PAREN
   32 param_list: . %empty  [COMMA, RIGHT_PAREN]
   33           | . param_entry
   35           | . param_list COMMA $@9 param_entry
   37 param_entry: . PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec
   39            | . REG_DIRECTIVE $@11 variable_spec identifier_spec

    PARAM_DIRECTIVE  shift, and go to state 129
    REG_DIRECTIVE    shift, and go to state 130

    $default  reduce using rule 32 (param_list)

    param_list   go to state 329
    param_entry  go to state 330


State 297

  124 initializer_list: LEFT_BRACE initializer_list RIGHT_BRACE .

    $default  reduce using rule 124 (initializer_list)


State 298

  126 literal_list: literal_list COMMA . literal_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    INT_OPERAND     shift, and go to state 137
    FLOAT_OPERAND   shift, and go to state 138
    DOUBLE_OPERAND  shift, and go to state 139

    literal_operand  go to state 331


State 299

  123 initializer_list: LEFT_BRACE literal_list RIGHT_BRACE .

    $default  reduce using rule 123 (initializer_list)


State 300

  153 option_list: option option_list .

    $default  reduce using rule 153 (option_list)


State 301

  263 twin_operand: IDENTIFIER . PLUS IDENTIFIER
  264             | IDENTIFIER . PLUS IDENTIFIER LO_OPTION
  265             | IDENTIFIER . PLUS IDENTIFIER HI_OPTION
  266             | IDENTIFIER . PLUS EQUALS IDENTIFIER
  267             | IDENTIFIER . PLUS EQUALS IDENTIFIER LO_OPTION
  268             | IDENTIFIER . PLUS EQUALS IDENTIFIER HI_OPTION
  269             | IDENTIFIER . PLUS EQUALS INT_OPERAND
  273 address_expression: IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  274                   | IDENTIFIER . LO_OPTION
  275                   | IDENTIFIER . HI_OPTION
  276                   | IDENTIFIER . PLUS INT_OPERAND

    LO_OPTION  shift, and go to state 310
    HI_OPTION  shift, and go to state 311
    PLUS       shift, and go to state 332

    $default  reduce using rule 273 (address_expression)


State 302

  270 literal_operand: INT_OPERAND .  [RIGHT_SQUARE_BRACKET]
  277 address_expression: INT_OPERAND .  [RIGHT_SQUARE_BRACKET]

    RIGHT_SQUARE_BRACKET  reduce using rule 270 (literal_operand)
    RIGHT_SQUARE_BRACKET  [reduce using rule 277 (address_expression)]
    $default              reduce using rule 270 (literal_operand)


State 303

  261 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET twin_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 333


State 304

  260 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET literal_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 334


State 305

  259 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET address_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 335


State 306

  239 operand: IDENTIFIER PLUS INT_OPERAND .

    $default  reduce using rule 239 (operand)


State 307

  244 operand: IDENTIFIER PIPE IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  245        | IDENTIFIER PIPE IDENTIFIER . LO_OPTION
  246        | IDENTIFIER PIPE IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 336
    HI_OPTION  shift, and go to state 337

    $default  reduce using rule 244 (operand)


State 308

  247 operand: IDENTIFIER BACKSLASH IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  248        | IDENTIFIER BACKSLASH IDENTIFIER . LO_OPTION
  249        | IDENTIFIER BACKSLASH IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 338
    HI_OPTION  shift, and go to state 339

    $default  reduce using rule 247 (operand)


State 309

  254 $@16: . %empty
  255 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA . $@16 vector_operand RIGHT_SQUARE_BRACKET

    $default  reduce using rule 254 ($@16)

    $@16  go to state 340


State 310

  274 address_expression: IDENTIFIER LO_OPTION .

    $default  reduce using rule 274 (address_expression)


State 311

  275 address_expression: IDENTIFIER HI_OPTION .

    $default  reduce using rule 275 (address_expression)


State 312

  276 address_expression: IDENTIFIER PLUS . INT_OPERAND

    INT_OPERAND  shift, and go to state 341


State 313

  258 memory_operand: LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 258 (memory_operand)


State 314

  241 operand: MINUS IDENTIFIER LO_OPTION .

    $default  reduce using rule 241 (operand)


State 315

  243 operand: MINUS IDENTIFIER HI_OPTION .

    $default  reduce using rule 243 (operand)


State 316

  273 address_expression: IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  274                   | IDENTIFIER . LO_OPTION
  275                   | IDENTIFIER . HI_OPTION
  276                   | IDENTIFIER . PLUS INT_OPERAND

    LO_OPTION  shift, and go to state 310
    HI_OPTION  shift, and go to state 311
    PLUS       shift, and go to state 312

    $default  reduce using rule 273 (address_expression)


State 317

  259 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 274


State 318

  250 vector_operand: LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE
  251               | LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 342


State 319

  253 vector_operand: LEFT_BRACE IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 253 (vector_operand)


State 320

  130 $@14: . %empty
  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN . $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    $default  reduce using rule 130 ($@14)

    $@14  go to state 343


State 321

  132 instruction: opcode_spec operand COMMA LEFT_PAREN . operand_list RIGHT_PAREN
  133            | opcode_spec operand COMMA LEFT_PAREN . RIGHT_PAREN
  228 operand_list: . operand
  229             | . operand COMMA operand_list
  230 operand: . IDENTIFIER
  231        | . EXCLAMATION IDENTIFIER
  232        | . MINUS IDENTIFIER
  233        | . memory_operand
  234        | . literal_operand
  235        | . builtin_operand
  236        | . vector_operand
  237        | . MINUS vector_operand
  238        | . tex_operand
  239        | . IDENTIFIER PLUS INT_OPERAND
  240        | . IDENTIFIER LO_OPTION
  241        | . MINUS IDENTIFIER LO_OPTION
  242        | . IDENTIFIER HI_OPTION
  243        | . MINUS IDENTIFIER HI_OPTION
  244        | . IDENTIFIER PIPE IDENTIFIER
  245        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | . IDENTIFIER BACKSLASH IDENTIFIER
  248        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  256 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | . SPECIAL_REGISTER
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 155
    INT_OPERAND          shift, and go to state 137
    FLOAT_OPERAND        shift, and go to state 138
    DOUBLE_OPERAND       shift, and go to state 139
    LEFT_SQUARE_BRACKET  shift, and go to state 156
    SPECIAL_REGISTER     shift, and go to state 157
    MINUS                shift, and go to state 158
    EXCLAMATION          shift, and go to state 159
    LEFT_BRACE           shift, and go to state 160
    RIGHT_PAREN          shift, and go to state 344

    operand_list     go to state 345
    operand          go to state 323
    vector_operand   go to state 164
    tex_operand      go to state 165
    builtin_operand  go to state 166
    memory_operand   go to state 167
    literal_operand  go to state 168


State 322

  229 operand_list: operand COMMA operand_list .

    $default  reduce using rule 229 (operand_list)


State 323

  228 operand_list: operand .  [SEMI_COLON, RIGHT_PAREN]
  229             | operand . COMMA operand_list

    COMMA  shift, and go to state 346

    $default  reduce using rule 228 (operand_list)


State 324

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA . INT_OPERAND

    INT_OPERAND  shift, and go to state 347


State 325

   41 ptr_spec: PTR_DIRECTIVE . ptr_space_spec ptr_align_spec
   42         | PTR_DIRECTIVE . ptr_align_spec
   43 ptr_space_spec: . GLOBAL_DIRECTIVE
   44               | . LOCAL_DIRECTIVE
   45               | . SHARED_DIRECTIVE
   46 ptr_align_spec: . ALIGN_DIRECTIVE INT_OPERAND

    ALIGN_DIRECTIVE   shift, and go to state 348
    GLOBAL_DIRECTIVE  shift, and go to state 349
    LOCAL_DIRECTIVE   shift, and go to state 350
    SHARED_DIRECTIVE  shift, and go to state 351

    ptr_space_spec  go to state 352
    ptr_align_spec  go to state 353


State 326

   37 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec . identifier_spec
   74 identifier_spec: . IDENTIFIER
   75                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   76                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   77                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 83

    identifier_spec  go to state 354


State 327

   39 param_entry: REG_DIRECTIVE $@11 variable_spec identifier_spec .

    $default  reduce using rule 39 (param_entry)


State 328

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param .

    $default  reduce using rule 17 (function_decl)


State 329

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list . RIGHT_PAREN
   35 param_list: param_list . COMMA $@9 param_entry

    COMMA        shift, and go to state 355
    RIGHT_PAREN  shift, and go to state 356


State 330

   33 param_list: param_entry .

    $default  reduce using rule 33 (param_list)


State 331

  126 literal_list: literal_list COMMA literal_operand .

    $default  reduce using rule 126 (literal_list)


State 332

  263 twin_operand: IDENTIFIER PLUS . IDENTIFIER
  264             | IDENTIFIER PLUS . IDENTIFIER LO_OPTION
  265             | IDENTIFIER PLUS . IDENTIFIER HI_OPTION
  266             | IDENTIFIER PLUS . EQUALS IDENTIFIER
  267             | IDENTIFIER PLUS . EQUALS IDENTIFIER LO_OPTION
  268             | IDENTIFIER PLUS . EQUALS IDENTIFIER HI_OPTION
  269             | IDENTIFIER PLUS . EQUALS INT_OPERAND
  276 address_expression: IDENTIFIER PLUS . INT_OPERAND

    IDENTIFIER   shift, and go to state 357
    INT_OPERAND  shift, and go to state 341
    EQUALS       shift, and go to state 358


State 333

  261 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 261 (memory_operand)


State 334

  260 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 260 (memory_operand)


State 335

  259 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 259 (memory_operand)


State 336

  245 operand: IDENTIFIER PIPE IDENTIFIER LO_OPTION .

    $default  reduce using rule 245 (operand)


State 337

  246 operand: IDENTIFIER PIPE IDENTIFIER HI_OPTION .

    $default  reduce using rule 246 (operand)


State 338

  248 operand: IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION .

    $default  reduce using rule 248 (operand)


State 339

  249 operand: IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION .

    $default  reduce using rule 249 (operand)


State 340

  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 . vector_operand RIGHT_SQUARE_BRACKET

    LEFT_BRACE  shift, and go to state 160

    vector_operand  go to state 359


State 341

  276 address_expression: IDENTIFIER PLUS INT_OPERAND .

    $default  reduce using rule 276 (address_expression)


State 342

  250 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE
  251               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE
  252               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    COMMA        shift, and go to state 360
    RIGHT_BRACE  shift, and go to state 361


State 343

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 . COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    COMMA  shift, and go to state 362


State 344

  133 instruction: opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 133 (instruction)


State 345

  132 instruction: opcode_spec operand COMMA LEFT_PAREN operand_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 363


State 346

  228 operand_list: . operand
  229             | . operand COMMA operand_list
  229             | operand COMMA . operand_list
  230 operand: . IDENTIFIER
  231        | . EXCLAMATION IDENTIFIER
  232        | . MINUS IDENTIFIER
  233        | . memory_operand
  234        | . literal_operand
  235        | . builtin_operand
  236        | . vector_operand
  237        | . MINUS vector_operand
  238        | . tex_operand
  239        | . IDENTIFIER PLUS INT_OPERAND
  240        | . IDENTIFIER LO_OPTION
  241        | . MINUS IDENTIFIER LO_OPTION
  242        | . IDENTIFIER HI_OPTION
  243        | . MINUS IDENTIFIER HI_OPTION
  244        | . IDENTIFIER PIPE IDENTIFIER
  245        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | . IDENTIFIER BACKSLASH IDENTIFIER
  248        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  256 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | . SPECIAL_REGISTER
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 155
    INT_OPERAND          shift, and go to state 137
    FLOAT_OPERAND        shift, and go to state 138
    DOUBLE_OPERAND       shift, and go to state 139
    LEFT_SQUARE_BRACKET  shift, and go to state 156
    SPECIAL_REGISTER     shift, and go to state 157
    MINUS                shift, and go to state 158
    EXCLAMATION          shift, and go to state 159
    LEFT_BRACE           shift, and go to state 160

    operand_list     go to state 322
    operand          go to state 323
    vector_operand   go to state 164
    tex_operand      go to state 165
    builtin_operand  go to state 166
    memory_operand   go to state 167
    literal_operand  go to state 168


State 347

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND .

    $default  reduce using rule 10 (block_spec)


State 348

   46 ptr_align_spec: ALIGN_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 364


State 349

   43 ptr_space_spec: GLOBAL_DIRECTIVE .

    $default  reduce using rule 43 (ptr_space_spec)


State 350

   44 ptr_space_spec: LOCAL_DIRECTIVE .

    $default  reduce using rule 44 (ptr_space_spec)


State 351

   45 ptr_space_spec: SHARED_DIRECTIVE .

    $default  reduce using rule 45 (ptr_space_spec)


State 352

   41 ptr_spec: PTR_DIRECTIVE ptr_space_spec . ptr_align_spec
   46 ptr_align_spec: . ALIGN_DIRECTIVE INT_OPERAND

    ALIGN_DIRECTIVE  shift, and go to state 348

    ptr_align_spec  go to state 365


State 353

   42 ptr_spec: PTR_DIRECTIVE ptr_align_spec .

    $default  reduce using rule 42 (ptr_spec)


State 354

   37 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec .

    $default  reduce using rule 37 (param_entry)


State 355

   34 $@9: . %empty
   35 param_list: param_list COMMA . $@9 param_entry

    $default  reduce using rule 34 ($@9)

    $@9  go to state 366


State 356

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN .

    $default  reduce using rule 23 (function_ident_param)


State 357

  263 twin_operand: IDENTIFIER PLUS IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  264             | IDENTIFIER PLUS IDENTIFIER . LO_OPTION
  265             | IDENTIFIER PLUS IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 367
    HI_OPTION  shift, and go to state 368

    $default  reduce using rule 263 (twin_operand)


State 358

  266 twin_operand: IDENTIFIER PLUS EQUALS . IDENTIFIER
  267             | IDENTIFIER PLUS EQUALS . IDENTIFIER LO_OPTION
  268             | IDENTIFIER PLUS EQUALS . IDENTIFIER HI_OPTION
  269             | IDENTIFIER PLUS EQUALS . INT_OPERAND

    IDENTIFIER   shift, and go to state 369
    INT_OPERAND  shift, and go to state 370


State 359

  255 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 371


State 360

  251 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE
  252               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 372


State 361

  250 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 250 (vector_operand)


State 362

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA . operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  230 operand: . IDENTIFIER
  231        | . EXCLAMATION IDENTIFIER
  232        | . MINUS IDENTIFIER
  233        | . memory_operand
  234        | . literal_operand
  235        | . builtin_operand
  236        | . vector_operand
  237        | . MINUS vector_operand
  238        | . tex_operand
  239        | . IDENTIFIER PLUS INT_OPERAND
  240        | . IDENTIFIER LO_OPTION
  241        | . MINUS IDENTIFIER LO_OPTION
  242        | . IDENTIFIER HI_OPTION
  243        | . MINUS IDENTIFIER HI_OPTION
  244        | . IDENTIFIER PIPE IDENTIFIER
  245        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | . IDENTIFIER BACKSLASH IDENTIFIER
  248        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  256 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | . SPECIAL_REGISTER
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 155
    INT_OPERAND          shift, and go to state 137
    FLOAT_OPERAND        shift, and go to state 138
    DOUBLE_OPERAND       shift, and go to state 139
    LEFT_SQUARE_BRACKET  shift, and go to state 156
    SPECIAL_REGISTER     shift, and go to state 157
    MINUS                shift, and go to state 158
    EXCLAMATION          shift, and go to state 159
    LEFT_BRACE           shift, and go to state 160

    operand          go to state 373
    vector_operand   go to state 164
    tex_operand      go to state 165
    builtin_operand  go to state 166
    memory_operand   go to state 167
    literal_operand  go to state 168


State 363

  132 instruction: opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN .

    $default  reduce using rule 132 (instruction)


State 364

   46 ptr_align_spec: ALIGN_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 46 (ptr_align_spec)


State 365

   41 ptr_spec: PTR_DIRECTIVE ptr_space_spec ptr_align_spec .

    $default  reduce using rule 41 (ptr_spec)


State 366

   35 param_list: param_list COMMA $@9 . param_entry
   37 param_entry: . PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec
   39            | . REG_DIRECTIVE $@11 variable_spec identifier_spec

    PARAM_DIRECTIVE  shift, and go to state 129
    REG_DIRECTIVE    shift, and go to state 130

    param_entry  go to state 374


State 367

  264 twin_operand: IDENTIFIER PLUS IDENTIFIER LO_OPTION .

    $default  reduce using rule 264 (twin_operand)


State 368

  265 twin_operand: IDENTIFIER PLUS IDENTIFIER HI_OPTION .

    $default  reduce using rule 265 (twin_operand)


State 369

  266 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  267             | IDENTIFIER PLUS EQUALS IDENTIFIER . LO_OPTION
  268             | IDENTIFIER PLUS EQUALS IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 375
    HI_OPTION  shift, and go to state 376

    $default  reduce using rule 266 (twin_operand)


State 370

  269 twin_operand: IDENTIFIER PLUS EQUALS INT_OPERAND .

    $default  reduce using rule 269 (twin_operand)


State 371

  255 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 255 (tex_operand)


State 372

  251 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE
  252               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE

    COMMA        shift, and go to state 377
    RIGHT_BRACE  shift, and go to state 378


State 373

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand . COMMA LEFT_PAREN operand_list RIGHT_PAREN

    COMMA  shift, and go to state 379


State 374

   35 param_list: param_list COMMA $@9 param_entry .

    $default  reduce using rule 35 (param_list)


State 375

  267 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION .

    $default  reduce using rule 267 (twin_operand)


State 376

  268 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION .

    $default  reduce using rule 268 (twin_operand)


State 377

  252 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 380


State 378

  251 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 251 (vector_operand)


State 379

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA . LEFT_PAREN operand_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 381


State 380

  252 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 382


State 381

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN . operand_list RIGHT_PAREN
  228 operand_list: . operand
  229             | . operand COMMA operand_list
  230 operand: . IDENTIFIER
  231        | . EXCLAMATION IDENTIFIER
  232        | . MINUS IDENTIFIER
  233        | . memory_operand
  234        | . literal_operand
  235        | . builtin_operand
  236        | . vector_operand
  237        | . MINUS vector_operand
  238        | . tex_operand
  239        | . IDENTIFIER PLUS INT_OPERAND
  240        | . IDENTIFIER LO_OPTION
  241        | . MINUS IDENTIFIER LO_OPTION
  242        | . IDENTIFIER HI_OPTION
  243        | . MINUS IDENTIFIER HI_OPTION
  244        | . IDENTIFIER PIPE IDENTIFIER
  245        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  246        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  247        | . IDENTIFIER BACKSLASH IDENTIFIER
  248        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  249        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  250 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  251               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  252               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  253               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  255 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  256 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  257                | . SPECIAL_REGISTER
  258 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  259               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  260               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  261               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  262               | . MINUS memory_operand
  270 literal_operand: . INT_OPERAND
  271                | . FLOAT_OPERAND
  272                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 155
    INT_OPERAND          shift, and go to state 137
    FLOAT_OPERAND        shift, and go to state 138
    DOUBLE_OPERAND       shift, and go to state 139
    LEFT_SQUARE_BRACKET  shift, and go to state 156
    SPECIAL_REGISTER     shift, and go to state 157
    MINUS                shift, and go to state 158
    EXCLAMATION          shift, and go to state 159
    LEFT_BRACE           shift, and go to state 160

    operand_list     go to state 383
    operand          go to state 323
    vector_operand   go to state 164
    tex_operand      go to state 165
    builtin_operand  go to state 166
    memory_operand   go to state 167
    literal_operand  go to state 168


State 382

  252 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 252 (vector_operand)


State 383

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 384


State 384

  131 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN .

    $default  reduce using rule 131 (instruction)
